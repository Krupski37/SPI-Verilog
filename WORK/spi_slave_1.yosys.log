
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Executing script file `spi_slave_1.ys' --

1. Executing Verilog-2005 frontend: ../MODEL/SPI_EXE_UNIT_1/adder.sv
Parsing SystemVerilog input from `../MODEL/SPI_EXE_UNIT_1/adder.sv' to AST representation.
Generating RTLIL representation for module `\adder'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../MODEL/SPI_EXE_UNIT_1/count_zeros.sv
Parsing SystemVerilog input from `../MODEL/SPI_EXE_UNIT_1/count_zeros.sv' to AST representation.
Generating RTLIL representation for module `\count_zeros'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv
Parsing SystemVerilog input from `../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv' to AST representation.
Generating RTLIL representation for module `\crc_eval'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ../MODEL/SPI_EXE_UNIT_1/crc_koder.sv
Parsing SystemVerilog input from `../MODEL/SPI_EXE_UNIT_1/crc_koder.sv' to AST representation.
Generating RTLIL representation for module `\crc_coder'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ../MODEL/SPI_EXE_UNIT_1/exe_unit.sv
Parsing SystemVerilog input from `../MODEL/SPI_EXE_UNIT_1/exe_unit.sv' to AST representation.
Generating RTLIL representation for module `\exe_unit'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ../MODEL/SPI_EXE_UNIT_1/gray_coder.sv
Parsing SystemVerilog input from `../MODEL/SPI_EXE_UNIT_1/gray_coder.sv' to AST representation.
Generating RTLIL representation for module `\gray_koder2'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: ../MODEL/SPI_EXE_UNIT_1/onehot2nkb_encoder.sv
Parsing SystemVerilog input from `../MODEL/SPI_EXE_UNIT_1/onehot2nkb_encoder.sv' to AST representation.
Generating RTLIL representation for module `\onehot2nkb_encoder'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: ../MODEL/SPI_EXE_UNIT_1/shifter.sv
Parsing SystemVerilog input from `../MODEL/SPI_EXE_UNIT_1/shifter.sv' to AST representation.
Generating RTLIL representation for module `\shifter'.
Warning: wire '\s_bit_next' is assigned in a block at ../MODEL/SPI_EXE_UNIT_1/shifter.sv:24.
Warning: wire '\s_bit' is assigned in a block at ../MODEL/SPI_EXE_UNIT_1/shifter.sv:44.
../MODEL/SPI_EXE_UNIT_1/shifter.sv:24: Warning: Identifier `\s_bit_next' is implicitly declared.
../MODEL/SPI_EXE_UNIT_1/shifter.sv:24: Warning: Identifier `\s_bit' is implicitly declared.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: ../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv
Parsing SystemVerilog input from `../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv' to AST representation.
Generating RTLIL representation for module `\sm_to_u2'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: ../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv
Parsing SystemVerilog input from `../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv' to AST representation.
Generating RTLIL representation for module `\spi_exe_unit_1'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: ../MODEL/SPI_EXE_UNIT_1/watchdog.sv
Parsing SystemVerilog input from `../MODEL/SPI_EXE_UNIT_1/watchdog.sv' to AST representation.
Generating RTLIL representation for module `\watchdog'.
Successfully finished Verilog frontend.

12. Executing SYNTH pass.

12.1. Executing HIERARCHY pass (managing design hierarchy).

12.1.1. Executing AST frontend in derive mode using pre-parsed AST for module `\adder'.
Parameter \LEN = 4
Generating RTLIL representation for module `$paramod\adder\LEN=4'.

12.1.2. Executing AST frontend in derive mode using pre-parsed AST for module `\sm_to_u2'.
Parameter \LEN = 4
Generating RTLIL representation for module `$paramod\sm_to_u2\LEN=4'.

12.1.3. Executing AST frontend in derive mode using pre-parsed AST for module `\crc_eval'.
Parameter \WCODE = 4
Parameter \WPOLY = 4
Generating RTLIL representation for module `$paramod\crc_eval\WCODE=4\WPOLY=4'.

12.1.4. Executing AST frontend in derive mode using pre-parsed AST for module `\crc_coder'.
Parameter \WCODE = 4
Parameter \WPOLY = 5
Generating RTLIL representation for module `$paramod\crc_coder\WCODE=4\WPOLY=5'.

12.1.5. Executing AST frontend in derive mode using pre-parsed AST for module `\count_zeros'.
Parameter \LEN = 4
Generating RTLIL representation for module `$paramod\count_zeros\LEN=4'.

12.1.6. Executing AST frontend in derive mode using pre-parsed AST for module `\gray_koder2'.
Parameter \LEN = 4
Generating RTLIL representation for module `$paramod\gray_koder2\LEN=4'.

12.1.7. Executing AST frontend in derive mode using pre-parsed AST for module `\onehot2nkb_encoder'.
Parameter \LEN = 4
Generating RTLIL representation for module `$paramod\onehot2nkb_encoder\LEN=4'.

12.1.8. Executing AST frontend in derive mode using pre-parsed AST for module `\exe_unit'.
Parameter \N = 4
Parameter \M = 4
Generating RTLIL representation for module `$paramod\exe_unit\N=4\M=4'.

12.1.9. Executing AST frontend in derive mode using pre-parsed AST for module `\watchdog'.
Parameter \N = 5
Generating RTLIL representation for module `$paramod\watchdog\N=5'.

12.1.10. Executing AST frontend in derive mode using pre-parsed AST for module `\shifter'.
Parameter \N = 20
Generating RTLIL representation for module `$paramod\shifter\N=20'.
Warning: wire '\s_bit_next' is assigned in a block at ../MODEL/SPI_EXE_UNIT_1/shifter.sv:24.
Warning: wire '\s_bit' is assigned in a block at ../MODEL/SPI_EXE_UNIT_1/shifter.sv:44.
../MODEL/SPI_EXE_UNIT_1/shifter.sv:24: Warning: Identifier `\s_bit_next' is implicitly declared.
../MODEL/SPI_EXE_UNIT_1/shifter.sv:24: Warning: Identifier `\s_bit' is implicitly declared.

12.1.11. Executing AST frontend in derive mode using pre-parsed AST for module `\adder'.
Parameter \LEN = 4
Found cached RTLIL representation for module `$paramod\adder\LEN=4'.

12.1.12. Executing AST frontend in derive mode using pre-parsed AST for module `\sm_to_u2'.
Parameter \LEN = 4
Found cached RTLIL representation for module `$paramod\sm_to_u2\LEN=4'.

12.1.13. Executing AST frontend in derive mode using pre-parsed AST for module `\crc_eval'.
Parameter \WCODE = 4
Parameter \WPOLY = 4
Found cached RTLIL representation for module `$paramod\crc_eval\WCODE=4\WPOLY=4'.

12.1.14. Executing AST frontend in derive mode using pre-parsed AST for module `\crc_coder'.
Parameter \WCODE = 4
Parameter \WPOLY = 5
Found cached RTLIL representation for module `$paramod\crc_coder\WCODE=4\WPOLY=5'.

12.1.15. Executing AST frontend in derive mode using pre-parsed AST for module `\count_zeros'.
Parameter \LEN = 4
Found cached RTLIL representation for module `$paramod\count_zeros\LEN=4'.

12.1.16. Executing AST frontend in derive mode using pre-parsed AST for module `\gray_koder2'.
Parameter \LEN = 4
Found cached RTLIL representation for module `$paramod\gray_koder2\LEN=4'.

12.1.17. Executing AST frontend in derive mode using pre-parsed AST for module `\onehot2nkb_encoder'.
Parameter \LEN = 4
Found cached RTLIL representation for module `$paramod\onehot2nkb_encoder\LEN=4'.
Warning: Resizing cell port $paramod\exe_unit\N=4\M=4.crc4.i_poly from 36 bits to 5 bits.
Warning: Resizing cell port $paramod\exe_unit\N=4\M=4.onehot.o_nkb from 4 bits to 2 bits.
Warning: Resizing cell port exe_unit.crc4.i_poly from 36 bits to 5 bits.
Warning: Resizing cell port exe_unit.onehot.o_nkb from 4 bits to 2 bits.

12.2. Executing PROC pass (convert processes to netlists).

12.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\onehot2nkb_encoder\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/onehot2nkb_encoder.sv:11$209'.
Found and cleaned up 1 empty switch in `\onehot2nkb_encoder.$proc$../MODEL/SPI_EXE_UNIT_1/onehot2nkb_encoder.sv:11$103'.
Cleaned up 2 empty switches.

12.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$257 in module $paramod\shifter\N=20.
Marked 2 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$256 in module $paramod\shifter\N=20.
Marked 3 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$252 in module $paramod\watchdog\N=5.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:20$250 in module $paramod\watchdog\N=5.
Marked 12 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$223 in module $paramod\exe_unit\N=4\M=4.
Marked 8 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/onehot2nkb_encoder.sv:11$209 in module $paramod\onehot2nkb_encoder\LEN=4.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/gray_coder.sv:7$201 in module $paramod\gray_koder2\LEN=4.
Marked 8 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:15$184 in module $paramod\count_zeros\LEN=4.
Marked 4 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:14$167 in module $paramod\crc_coder\WCODE=4\WPOLY=5.
Marked 4 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:13$150 in module $paramod\crc_eval\WCODE=4\WPOLY=4.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:11$142 in module $paramod\sm_to_u2\LEN=4.
Marked 2 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/adder.sv:9$138 in module $paramod\adder\LEN=4.
Marked 3 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$134 in module watchdog.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:20$132 in module watchdog.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:189$130 in module spi_exe_unit_1.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:180$128 in module spi_exe_unit_1.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:171$126 in module spi_exe_unit_1.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:162$124 in module spi_exe_unit_1.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:154$122 in module spi_exe_unit_1.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:146$120 in module spi_exe_unit_1.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:128$118 in module spi_exe_unit_1.
Marked 3 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$116 in module spi_exe_unit_1.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:11$112 in module sm_to_u2.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$110 in module shifter.
Marked 2 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$109 in module shifter.
Marked 8 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/onehot2nkb_encoder.sv:11$103 in module onehot2nkb_encoder.
Marked 1 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/gray_coder.sv:7$95 in module gray_koder2.
Marked 12 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$68 in module exe_unit.
Marked 4 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:14$47 in module crc_coder.
Marked 4 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:13$30 in module crc_eval.
Marked 8 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:15$9 in module count_zeros.
Marked 2 switch rules as full_case in process $proc$../MODEL/SPI_EXE_UNIT_1/adder.sv:9$1 in module adder.
Removed a total of 0 dead cases.

12.2.3. Executing PROC_INIT pass (extract init attributes).

12.2.4. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \i_rst_n in `$paramod\shifter\N=20.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$257'.
Found async reset \i_rst_n in `$paramod\watchdog\N=5.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:20$250'.
Found async reset \i_rst_n in `\watchdog.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:20$132'.
Found async reset \i_rst in `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:189$130'.
Found async reset \i_rst in `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:180$128'.
Found async reset \i_rst in `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:171$126'.
Found async reset \i_rst in `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:162$124'.
Found async reset \i_rst in `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:154$122'.
Found async reset \i_rst in `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:146$120'.
Found async reset \i_rst in `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:128$118'.
Found async reset \i_rst_n in `\shifter.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$110'.

12.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\shifter\N=20.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$257'.
     1/2: $0\s_bit[0:0]
     2/2: $0\s_shifter[19:0]
Creating decoders for process `$paramod\shifter\N=20.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$256'.
     1/8: $2\s_shifter_next[19:0]
     2/8: $2\s_bit_next[0:0]
     3/8: $1\s_bit_next[0:0]
     4/8: $1\s_shifter_next[19:0]
     5/8: $0\s_bit_next[0:0]
     6/8: $0\s_shifter_next[19:0]
     7/8: $0\o_bit[0:0]
     8/8: $0\o_data[19:0]
Creating decoders for process `$paramod\watchdog\N=5.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$252'.
     1/9: $3\o_inter[0:0]
     2/9: $2\s_count_next[4:0]
     3/9: $2\o_inter[0:0]
     4/9: $1\s_count_next[4:0]
     5/9: $1\s_cycles_next[4:0]
     6/9: $1\o_inter[0:0]
     7/9: $0\o_inter[0:0]
     8/9: $0\s_count_next[4:0]
     9/9: $0\s_cycles_next[4:0]
Creating decoders for process `$paramod\watchdog\N=5.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:20$250'.
     1/2: $0\s_count[4:0]
     2/2: $0\s_cycles[4:0]
Creating decoders for process `$paramod\exe_unit\N=4\M=4.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$223'.
     1/20: $1\o_PF[0:0]
     2/20: $8\counter[31:0]
     3/20: $7\counter[31:0]
     4/20: $6\counter[31:0]
     5/20: $5\counter[31:0]
     6/20: $1\o_BF[0:0]
     7/20: $4\counter[31:0]
     8/20: $3\counter[31:0]
     9/20: $2\counter[31:0]
    10/20: $1\counter[31:0]
    11/20: $1\o_OF[0:0]
    12/20: $1\o_VF[0:0]
    13/20: $1\o_result[3:0]
    14/20: $0\o_PF[0:0]
    15/20: $0\i[31:0]
    16/20: $0\counter[31:0]
    17/20: $0\o_BF[0:0]
    18/20: $0\o_OF[0:0]
    19/20: $0\o_result[3:0]
    20/20: $0\o_VF[0:0]
Creating decoders for process `$paramod\onehot2nkb_encoder\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/onehot2nkb_encoder.sv:11$209'.
     1/20: $9\o_nkb[1:0]
     2/20: $8\o_nkb[1:0]
     3/20: $8\s_was1[0:0]
     4/20: $7\s_was1[0:0]
     5/20: $7\o_nkb[1:0]
     6/20: $6\o_nkb[1:0]
     7/20: $6\s_was1[0:0]
     8/20: $5\s_was1[0:0]
     9/20: $5\o_nkb[1:0]
    10/20: $4\o_nkb[1:0]
    11/20: $4\s_was1[0:0]
    12/20: $3\s_was1[0:0]
    13/20: $3\o_nkb[1:0]
    14/20: $2\o_nkb[1:0]
    15/20: $2\s_was1[0:0]
    16/20: $1\s_was1[0:0]
    17/20: $1\o_nkb[1:0]
    18/20: $0\o_nkb[1:0]
    19/20: $0\i[31:0]
    20/20: $0\s_was1[0:0]
Creating decoders for process `$paramod\gray_koder2\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/gray_coder.sv:7$201'.
     1/2: $1\o_gray[3:0]
     2/2: $0\o_gray[3:0]
Creating decoders for process `$paramod\count_zeros\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:15$184'.
     1/11: $8\zeros[3:0]
     2/11: $7\zeros[3:0]
     3/11: $6\zeros[3:0]
     4/11: $5\zeros[3:0]
     5/11: $4\zeros[3:0]
     6/11: $3\zeros[3:0]
     7/11: $2\zeros[3:0]
     8/11: $1\zeros[3:0]
     9/11: { $0\o_carry[0:0] $0\o_zeros[3:0] }
    10/11: $0\i[31:0]
    11/11: $0\zeros[3:0]
Creating decoders for process `$paramod\crc_coder\WCODE=4\WPOLY=5.$proc$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:14$167'.
     1/8: $4\crc_tmp[7:0]
     2/8: $3\crc_tmp[7:0]
     3/8: $2\crc_tmp[7:0]
     4/8: $1\crc_tmp[7:0]
     5/8: $0\o_crc[3:0]
     6/8: $0\i[31:0]
     7/8: $0\poly_tmp[7:0]
     8/8: $0\crc_tmp[7:0]
Creating decoders for process `$paramod\crc_eval\WCODE=4\WPOLY=4.$proc$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:13$150'.
     1/8: $4\crc_tmp[6:0]
     2/8: $3\crc_tmp[6:0]
     3/8: $2\crc_tmp[6:0]
     4/8: $1\crc_tmp[6:0]
     5/8: $0\o_crc[3:0]
     6/8: $0\i[31:0]
     7/8: $0\poly_tmp[6:0]
     8/8: $0\crc_tmp[6:0]
Creating decoders for process `$paramod\sm_to_u2\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:11$142'.
     1/5: $1\tmp[3:0] [3]
     2/5: $1\tmp[3:0] [2:0]
     3/5: $1\o_u2code[3:0]
     4/5: $0\tmp[3:0]
     5/5: $0\o_u2code[3:0]
Creating decoders for process `$paramod\adder\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/adder.sv:9$138'.
     1/4: $2\o_carry[0:0]
     2/4: $1\o_carry[0:0]
     3/4: $0\o_carry[0:0]
     4/4: $0\o_sum[3:0]
Creating decoders for process `\watchdog.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$134'.
     1/9: $3\o_inter[0:0]
     2/9: $2\s_count_next[11:0]
     3/9: $2\o_inter[0:0]
     4/9: $1\s_count_next[11:0]
     5/9: $1\s_cycles_next[11:0]
     6/9: $1\o_inter[0:0]
     7/9: $0\o_inter[0:0]
     8/9: $0\s_count_next[11:0]
     9/9: $0\s_cycles_next[11:0]
Creating decoders for process `\watchdog.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:20$132'.
     1/2: $0\s_count[11:0]
     2/2: $0\s_cycles[11:0]
Creating decoders for process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:189$130'.
     1/1: $0\reg_flags[3:0]
Creating decoders for process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:180$128'.
     1/1: $0\reg_results[3:0]
Creating decoders for process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:171$126'.
     1/1: $0\reg_oper[3:0]
Creating decoders for process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:162$124'.
     1/1: $0\reg_argB[3:0]
Creating decoders for process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:154$122'.
     1/1: $0\reg_argA[3:0]
Creating decoders for process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:146$120'.
     1/1: $0\s_bit[0:0]
Creating decoders for process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:128$118'.
     1/1: $0\s_state[3:0]
Creating decoders for process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$116'.
     1/27: $3\s_state_next[3:0]
     2/27: $2\o_miso[0:0]
     3/27: $2\s_transfer[0:0]
     4/27: $2\s_watchdog_we[0:0]
     5/27: $2\s_state_next[3:0]
     6/27: $1\s_state_next[3:0]
     7/27: $1\s_watchdog_we[0:0]
     8/27: $1\o_miso[0:0]
     9/27: $1\s_transfer[0:0]
    10/27: $1\s_data[19:0]
    11/27: $1\s_wrt[0:0]
    12/27: $1\s_flags_next[3:0]
    13/27: $1\s_results_next[3:0]
    14/27: $1\s_oper_next[3:0]
    15/27: $1\s_argB_next[3:0]
    16/27: $1\s_argA_next[3:0]
    17/27: $0\s_state_next[3:0]
    18/27: $0\s_data[19:0]
    19/27: $0\s_wrt[0:0]
    20/27: $0\s_watchdog_we[0:0]
    21/27: $0\s_flags_next[3:0]
    22/27: $0\s_results_next[3:0]
    23/27: $0\s_oper_next[3:0]
    24/27: $0\s_argB_next[3:0]
    25/27: $0\s_argA_next[3:0]
    26/27: $0\o_miso[0:0]
    27/27: $0\s_transfer[0:0]
Creating decoders for process `\sm_to_u2.$proc$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:11$112'.
     1/5: $1\tmp[3:0] [3]
     2/5: $1\tmp[3:0] [2:0]
     3/5: $1\o_u2code[3:0]
     4/5: $0\tmp[3:0]
     5/5: $0\o_u2code[3:0]
Creating decoders for process `\shifter.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$110'.
     1/2: $0\s_bit[0:0]
     2/2: $0\s_shifter[19:0]
Creating decoders for process `\shifter.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$109'.
     1/8: $2\s_shifter_next[19:0]
     2/8: $2\s_bit_next[0:0]
     3/8: $1\s_bit_next[0:0]
     4/8: $1\s_shifter_next[19:0]
     5/8: $0\s_bit_next[0:0]
     6/8: $0\s_shifter_next[19:0]
     7/8: $0\o_bit[0:0]
     8/8: $0\o_data[19:0]
Creating decoders for process `\onehot2nkb_encoder.$proc$../MODEL/SPI_EXE_UNIT_1/onehot2nkb_encoder.sv:11$103'.
     1/20: $9\o_nkb[1:0]
     2/20: $8\o_nkb[1:0]
     3/20: $8\s_was1[0:0]
     4/20: $7\s_was1[0:0]
     5/20: $7\o_nkb[1:0]
     6/20: $6\o_nkb[1:0]
     7/20: $6\s_was1[0:0]
     8/20: $5\s_was1[0:0]
     9/20: $5\o_nkb[1:0]
    10/20: $4\o_nkb[1:0]
    11/20: $4\s_was1[0:0]
    12/20: $3\s_was1[0:0]
    13/20: $3\o_nkb[1:0]
    14/20: $2\o_nkb[1:0]
    15/20: $2\s_was1[0:0]
    16/20: $1\s_was1[0:0]
    17/20: $1\o_nkb[1:0]
    18/20: $0\o_nkb[1:0]
    19/20: $0\i[31:0]
    20/20: $0\s_was1[0:0]
Creating decoders for process `\gray_koder2.$proc$../MODEL/SPI_EXE_UNIT_1/gray_coder.sv:7$95'.
     1/2: $1\o_gray[3:0]
     2/2: $0\o_gray[3:0]
Creating decoders for process `\exe_unit.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$68'.
     1/20: $1\o_PF[0:0]
     2/20: $8\counter[31:0]
     3/20: $7\counter[31:0]
     4/20: $6\counter[31:0]
     5/20: $5\counter[31:0]
     6/20: $1\o_BF[0:0]
     7/20: $4\counter[31:0]
     8/20: $3\counter[31:0]
     9/20: $2\counter[31:0]
    10/20: $1\counter[31:0]
    11/20: $1\o_OF[0:0]
    12/20: $1\o_VF[0:0]
    13/20: $1\o_result[3:0]
    14/20: $0\o_PF[0:0]
    15/20: $0\i[31:0]
    16/20: $0\counter[31:0]
    17/20: $0\o_BF[0:0]
    18/20: $0\o_OF[0:0]
    19/20: $0\o_result[3:0]
    20/20: $0\o_VF[0:0]
Creating decoders for process `\crc_coder.$proc$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:14$47'.
     1/8: $4\crc_tmp[7:0]
     2/8: $3\crc_tmp[7:0]
     3/8: $2\crc_tmp[7:0]
     4/8: $1\crc_tmp[7:0]
     5/8: $0\o_crc[3:0]
     6/8: $0\i[31:0]
     7/8: $0\poly_tmp[7:0]
     8/8: $0\crc_tmp[7:0]
Creating decoders for process `\crc_eval.$proc$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:13$30'.
     1/8: $4\crc_tmp[6:0]
     2/8: $3\crc_tmp[6:0]
     3/8: $2\crc_tmp[6:0]
     4/8: $1\crc_tmp[6:0]
     5/8: $0\o_crc[3:0]
     6/8: $0\i[31:0]
     7/8: $0\poly_tmp[6:0]
     8/8: $0\crc_tmp[6:0]
Creating decoders for process `\count_zeros.$proc$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:15$9'.
     1/11: $8\zeros[3:0]
     2/11: $7\zeros[3:0]
     3/11: $6\zeros[3:0]
     4/11: $5\zeros[3:0]
     5/11: $4\zeros[3:0]
     6/11: $3\zeros[3:0]
     7/11: $2\zeros[3:0]
     8/11: $1\zeros[3:0]
     9/11: { $0\o_carry[0:0] $0\o_zeros[3:0] }
    10/11: $0\i[31:0]
    11/11: $0\zeros[3:0]
Creating decoders for process `\adder.$proc$../MODEL/SPI_EXE_UNIT_1/adder.sv:9$1'.
     1/4: $2\o_carry[0:0]
     2/4: $1\o_carry[0:0]
     3/4: $0\o_carry[0:0]
     4/4: $0\o_sum[3:0]

12.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\shifter\N=20.\s_shifter_next' from process `$paramod\shifter\N=20.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$256'.
No latch inferred for signal `$paramod\shifter\N=20.\o_bit' from process `$paramod\shifter\N=20.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$256'.
No latch inferred for signal `$paramod\shifter\N=20.\o_data' from process `$paramod\shifter\N=20.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$256'.
No latch inferred for signal `$paramod\shifter\N=20.\s_bit_next' from process `$paramod\shifter\N=20.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$256'.
No latch inferred for signal `$paramod\watchdog\N=5.\o_inter' from process `$paramod\watchdog\N=5.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$252'.
No latch inferred for signal `$paramod\watchdog\N=5.\s_cycles_next' from process `$paramod\watchdog\N=5.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$252'.
No latch inferred for signal `$paramod\watchdog\N=5.\s_count_next' from process `$paramod\watchdog\N=5.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$252'.
No latch inferred for signal `$paramod\exe_unit\N=4\M=4.\i' from process `$paramod\exe_unit\N=4\M=4.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$223'.
No latch inferred for signal `$paramod\exe_unit\N=4\M=4.\counter' from process `$paramod\exe_unit\N=4\M=4.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$223'.
No latch inferred for signal `$paramod\exe_unit\N=4\M=4.\o_OF' from process `$paramod\exe_unit\N=4\M=4.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$223'.
No latch inferred for signal `$paramod\exe_unit\N=4\M=4.\o_BF' from process `$paramod\exe_unit\N=4\M=4.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$223'.
No latch inferred for signal `$paramod\exe_unit\N=4\M=4.\o_PF' from process `$paramod\exe_unit\N=4\M=4.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$223'.
No latch inferred for signal `$paramod\exe_unit\N=4\M=4.\o_VF' from process `$paramod\exe_unit\N=4\M=4.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$223'.
No latch inferred for signal `$paramod\exe_unit\N=4\M=4.\o_result' from process `$paramod\exe_unit\N=4\M=4.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$223'.
No latch inferred for signal `$paramod\onehot2nkb_encoder\LEN=4.\i' from process `$paramod\onehot2nkb_encoder\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/onehot2nkb_encoder.sv:11$209'.
No latch inferred for signal `$paramod\onehot2nkb_encoder\LEN=4.\o_nkb' from process `$paramod\onehot2nkb_encoder\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/onehot2nkb_encoder.sv:11$209'.
No latch inferred for signal `$paramod\onehot2nkb_encoder\LEN=4.\s_was1' from process `$paramod\onehot2nkb_encoder\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/onehot2nkb_encoder.sv:11$209'.
No latch inferred for signal `$paramod\gray_koder2\LEN=4.\o_gray' from process `$paramod\gray_koder2\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/gray_coder.sv:7$201'.
No latch inferred for signal `$paramod\count_zeros\LEN=4.\o_carry' from process `$paramod\count_zeros\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:15$184'.
No latch inferred for signal `$paramod\count_zeros\LEN=4.\o_zeros' from process `$paramod\count_zeros\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:15$184'.
No latch inferred for signal `$paramod\count_zeros\LEN=4.\i' from process `$paramod\count_zeros\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:15$184'.
No latch inferred for signal `$paramod\count_zeros\LEN=4.\zeros' from process `$paramod\count_zeros\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:15$184'.
No latch inferred for signal `$paramod\crc_coder\WCODE=4\WPOLY=5.\i' from process `$paramod\crc_coder\WCODE=4\WPOLY=5.$proc$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:14$167'.
No latch inferred for signal `$paramod\crc_coder\WCODE=4\WPOLY=5.\crc_tmp' from process `$paramod\crc_coder\WCODE=4\WPOLY=5.$proc$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:14$167'.
No latch inferred for signal `$paramod\crc_coder\WCODE=4\WPOLY=5.\poly_tmp' from process `$paramod\crc_coder\WCODE=4\WPOLY=5.$proc$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:14$167'.
No latch inferred for signal `$paramod\crc_coder\WCODE=4\WPOLY=5.\o_crc' from process `$paramod\crc_coder\WCODE=4\WPOLY=5.$proc$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:14$167'.
No latch inferred for signal `$paramod\crc_eval\WCODE=4\WPOLY=4.\i' from process `$paramod\crc_eval\WCODE=4\WPOLY=4.$proc$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:13$150'.
No latch inferred for signal `$paramod\crc_eval\WCODE=4\WPOLY=4.\crc_tmp' from process `$paramod\crc_eval\WCODE=4\WPOLY=4.$proc$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:13$150'.
No latch inferred for signal `$paramod\crc_eval\WCODE=4\WPOLY=4.\poly_tmp' from process `$paramod\crc_eval\WCODE=4\WPOLY=4.$proc$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:13$150'.
No latch inferred for signal `$paramod\crc_eval\WCODE=4\WPOLY=4.\o_crc' from process `$paramod\crc_eval\WCODE=4\WPOLY=4.$proc$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:13$150'.
No latch inferred for signal `$paramod\sm_to_u2\LEN=4.\o_u2code' from process `$paramod\sm_to_u2\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:11$142'.
No latch inferred for signal `$paramod\sm_to_u2\LEN=4.\tmp' from process `$paramod\sm_to_u2\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:11$142'.
No latch inferred for signal `$paramod\adder\LEN=4.\o_sum' from process `$paramod\adder\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/adder.sv:9$138'.
No latch inferred for signal `$paramod\adder\LEN=4.\o_carry' from process `$paramod\adder\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/adder.sv:9$138'.
No latch inferred for signal `\watchdog.\o_inter' from process `\watchdog.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$134'.
No latch inferred for signal `\watchdog.\s_cycles_next' from process `\watchdog.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$134'.
No latch inferred for signal `\watchdog.\s_count_next' from process `\watchdog.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$134'.
No latch inferred for signal `\spi_exe_unit_1.\s_transfer' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$116'.
No latch inferred for signal `\spi_exe_unit_1.\o_miso' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$116'.
No latch inferred for signal `\spi_exe_unit_1.\s_argA_next' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$116'.
No latch inferred for signal `\spi_exe_unit_1.\s_argB_next' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$116'.
No latch inferred for signal `\spi_exe_unit_1.\s_oper_next' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$116'.
No latch inferred for signal `\spi_exe_unit_1.\s_results_next' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$116'.
No latch inferred for signal `\spi_exe_unit_1.\s_flags_next' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$116'.
No latch inferred for signal `\spi_exe_unit_1.\s_watchdog_we' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$116'.
No latch inferred for signal `\spi_exe_unit_1.\s_wrt' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$116'.
No latch inferred for signal `\spi_exe_unit_1.\s_data' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$116'.
No latch inferred for signal `\spi_exe_unit_1.\s_state_next' from process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$116'.
No latch inferred for signal `\sm_to_u2.\o_u2code' from process `\sm_to_u2.$proc$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:11$112'.
No latch inferred for signal `\sm_to_u2.\tmp' from process `\sm_to_u2.$proc$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:11$112'.
No latch inferred for signal `\shifter.\s_shifter_next' from process `\shifter.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$109'.
No latch inferred for signal `\shifter.\o_bit' from process `\shifter.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$109'.
No latch inferred for signal `\shifter.\o_data' from process `\shifter.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$109'.
No latch inferred for signal `\shifter.\s_bit_next' from process `\shifter.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$109'.
No latch inferred for signal `\onehot2nkb_encoder.\i' from process `\onehot2nkb_encoder.$proc$../MODEL/SPI_EXE_UNIT_1/onehot2nkb_encoder.sv:11$103'.
No latch inferred for signal `\onehot2nkb_encoder.\o_nkb' from process `\onehot2nkb_encoder.$proc$../MODEL/SPI_EXE_UNIT_1/onehot2nkb_encoder.sv:11$103'.
No latch inferred for signal `\onehot2nkb_encoder.\s_was1' from process `\onehot2nkb_encoder.$proc$../MODEL/SPI_EXE_UNIT_1/onehot2nkb_encoder.sv:11$103'.
No latch inferred for signal `\gray_koder2.\o_gray' from process `\gray_koder2.$proc$../MODEL/SPI_EXE_UNIT_1/gray_coder.sv:7$95'.
No latch inferred for signal `\exe_unit.\i' from process `\exe_unit.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$68'.
No latch inferred for signal `\exe_unit.\counter' from process `\exe_unit.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$68'.
No latch inferred for signal `\exe_unit.\o_OF' from process `\exe_unit.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$68'.
No latch inferred for signal `\exe_unit.\o_BF' from process `\exe_unit.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$68'.
No latch inferred for signal `\exe_unit.\o_PF' from process `\exe_unit.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$68'.
No latch inferred for signal `\exe_unit.\o_VF' from process `\exe_unit.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$68'.
No latch inferred for signal `\exe_unit.\o_result' from process `\exe_unit.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$68'.
No latch inferred for signal `\crc_coder.\i' from process `\crc_coder.$proc$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:14$47'.
No latch inferred for signal `\crc_coder.\crc_tmp' from process `\crc_coder.$proc$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:14$47'.
No latch inferred for signal `\crc_coder.\poly_tmp' from process `\crc_coder.$proc$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:14$47'.
No latch inferred for signal `\crc_coder.\o_crc' from process `\crc_coder.$proc$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:14$47'.
No latch inferred for signal `\crc_eval.\i' from process `\crc_eval.$proc$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:13$30'.
No latch inferred for signal `\crc_eval.\crc_tmp' from process `\crc_eval.$proc$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:13$30'.
No latch inferred for signal `\crc_eval.\poly_tmp' from process `\crc_eval.$proc$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:13$30'.
No latch inferred for signal `\crc_eval.\o_crc' from process `\crc_eval.$proc$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:13$30'.
No latch inferred for signal `\count_zeros.\o_carry' from process `\count_zeros.$proc$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:15$9'.
No latch inferred for signal `\count_zeros.\o_zeros' from process `\count_zeros.$proc$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:15$9'.
No latch inferred for signal `\count_zeros.\i' from process `\count_zeros.$proc$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:15$9'.
No latch inferred for signal `\count_zeros.\zeros' from process `\count_zeros.$proc$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:15$9'.
No latch inferred for signal `\adder.\o_sum' from process `\adder.$proc$../MODEL/SPI_EXE_UNIT_1/adder.sv:9$1'.
No latch inferred for signal `\adder.\o_carry' from process `\adder.$proc$../MODEL/SPI_EXE_UNIT_1/adder.sv:9$1'.

12.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\shifter\N=20.\s_shifter' using process `$paramod\shifter\N=20.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$257'.
  created $adff cell `$procdff$823' with positive edge clock and negative level reset.
Creating register for signal `$paramod\shifter\N=20.\s_bit' using process `$paramod\shifter\N=20.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$257'.
  created $adff cell `$procdff$824' with positive edge clock and negative level reset.
Creating register for signal `$paramod\watchdog\N=5.\s_cycles' using process `$paramod\watchdog\N=5.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:20$250'.
  created $adff cell `$procdff$825' with positive edge clock and negative level reset.
Creating register for signal `$paramod\watchdog\N=5.\s_count' using process `$paramod\watchdog\N=5.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:20$250'.
  created $adff cell `$procdff$826' with positive edge clock and negative level reset.
Creating register for signal `\watchdog.\s_cycles' using process `\watchdog.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:20$132'.
  created $adff cell `$procdff$827' with positive edge clock and negative level reset.
Creating register for signal `\watchdog.\s_count' using process `\watchdog.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:20$132'.
  created $adff cell `$procdff$828' with positive edge clock and negative level reset.
Creating register for signal `\spi_exe_unit_1.\reg_flags' using process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:189$130'.
  created $adff cell `$procdff$829' with negative edge clock and negative level reset.
Creating register for signal `\spi_exe_unit_1.\reg_results' using process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:180$128'.
  created $adff cell `$procdff$830' with negative edge clock and negative level reset.
Creating register for signal `\spi_exe_unit_1.\reg_oper' using process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:171$126'.
  created $adff cell `$procdff$831' with negative edge clock and negative level reset.
Creating register for signal `\spi_exe_unit_1.\reg_argB' using process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:162$124'.
  created $adff cell `$procdff$832' with negative edge clock and negative level reset.
Creating register for signal `\spi_exe_unit_1.\reg_argA' using process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:154$122'.
  created $adff cell `$procdff$833' with negative edge clock and negative level reset.
Creating register for signal `\spi_exe_unit_1.\s_bit' using process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:146$120'.
  created $adff cell `$procdff$834' with negative edge clock and negative level reset.
Creating register for signal `\spi_exe_unit_1.\s_state' using process `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:128$118'.
  created $adff cell `$procdff$835' with negative edge clock and negative level reset.
Creating register for signal `\shifter.\s_shifter' using process `\shifter.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$110'.
  created $adff cell `$procdff$836' with positive edge clock and negative level reset.
Creating register for signal `\shifter.\s_bit' using process `\shifter.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$110'.
  created $adff cell `$procdff$837' with positive edge clock and negative level reset.

12.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\shifter\N=20.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$257'.
Found and cleaned up 2 empty switches in `$paramod\shifter\N=20.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$256'.
Removing empty process `$paramod\shifter\N=20.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$256'.
Found and cleaned up 3 empty switches in `$paramod\watchdog\N=5.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$252'.
Removing empty process `$paramod\watchdog\N=5.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$252'.
Removing empty process `$paramod\watchdog\N=5.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:20$250'.
Found and cleaned up 12 empty switches in `$paramod\exe_unit\N=4\M=4.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$223'.
Removing empty process `$paramod\exe_unit\N=4\M=4.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$223'.
Found and cleaned up 8 empty switches in `$paramod\onehot2nkb_encoder\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/onehot2nkb_encoder.sv:11$209'.
Removing empty process `$paramod\onehot2nkb_encoder\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/onehot2nkb_encoder.sv:11$209'.
Found and cleaned up 1 empty switch in `$paramod\gray_koder2\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/gray_coder.sv:7$201'.
Removing empty process `$paramod\gray_koder2\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/gray_coder.sv:7$201'.
Found and cleaned up 8 empty switches in `$paramod\count_zeros\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:15$184'.
Removing empty process `$paramod\count_zeros\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:15$184'.
Found and cleaned up 4 empty switches in `$paramod\crc_coder\WCODE=4\WPOLY=5.$proc$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:14$167'.
Removing empty process `$paramod\crc_coder\WCODE=4\WPOLY=5.$proc$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:14$167'.
Found and cleaned up 4 empty switches in `$paramod\crc_eval\WCODE=4\WPOLY=4.$proc$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:13$150'.
Removing empty process `$paramod\crc_eval\WCODE=4\WPOLY=4.$proc$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:13$150'.
Found and cleaned up 1 empty switch in `$paramod\sm_to_u2\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:11$142'.
Removing empty process `$paramod\sm_to_u2\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:11$142'.
Found and cleaned up 2 empty switches in `$paramod\adder\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/adder.sv:9$138'.
Removing empty process `$paramod\adder\LEN=4.$proc$../MODEL/SPI_EXE_UNIT_1/adder.sv:9$138'.
Found and cleaned up 3 empty switches in `\watchdog.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$134'.
Removing empty process `watchdog.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:35$134'.
Removing empty process `watchdog.$proc$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:20$132'.
Removing empty process `spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:189$130'.
Removing empty process `spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:180$128'.
Removing empty process `spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:171$126'.
Removing empty process `spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:162$124'.
Removing empty process `spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:154$122'.
Removing empty process `spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:146$120'.
Removing empty process `spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:128$118'.
Found and cleaned up 3 empty switches in `\spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$116'.
Removing empty process `spi_exe_unit_1.$proc$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:66$116'.
Found and cleaned up 1 empty switch in `\sm_to_u2.$proc$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:11$112'.
Removing empty process `sm_to_u2.$proc$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:11$112'.
Removing empty process `shifter.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:37$110'.
Found and cleaned up 2 empty switches in `\shifter.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$109'.
Removing empty process `shifter.$proc$../MODEL/SPI_EXE_UNIT_1/shifter.sv:18$109'.
Found and cleaned up 8 empty switches in `\onehot2nkb_encoder.$proc$../MODEL/SPI_EXE_UNIT_1/onehot2nkb_encoder.sv:11$103'.
Removing empty process `onehot2nkb_encoder.$proc$../MODEL/SPI_EXE_UNIT_1/onehot2nkb_encoder.sv:11$103'.
Found and cleaned up 1 empty switch in `\gray_koder2.$proc$../MODEL/SPI_EXE_UNIT_1/gray_coder.sv:7$95'.
Removing empty process `gray_koder2.$proc$../MODEL/SPI_EXE_UNIT_1/gray_coder.sv:7$95'.
Found and cleaned up 12 empty switches in `\exe_unit.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$68'.
Removing empty process `exe_unit.$proc$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:67$68'.
Found and cleaned up 4 empty switches in `\crc_coder.$proc$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:14$47'.
Removing empty process `crc_coder.$proc$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:14$47'.
Found and cleaned up 4 empty switches in `\crc_eval.$proc$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:13$30'.
Removing empty process `crc_eval.$proc$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:13$30'.
Found and cleaned up 8 empty switches in `\count_zeros.$proc$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:15$9'.
Removing empty process `count_zeros.$proc$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:15$9'.
Found and cleaned up 2 empty switches in `\adder.$proc$../MODEL/SPI_EXE_UNIT_1/adder.sv:9$1'.
Removing empty process `adder.$proc$../MODEL/SPI_EXE_UNIT_1/adder.sv:9$1'.
Cleaned up 93 empty switches.

12.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\shifter\N=20.
Optimizing module $paramod\watchdog\N=5.
<suppressed ~1 debug messages>
Optimizing module $paramod\exe_unit\N=4\M=4.
<suppressed ~15 debug messages>
Optimizing module $paramod\onehot2nkb_encoder\LEN=4.
<suppressed ~5 debug messages>
Optimizing module $paramod\gray_koder2\LEN=4.
<suppressed ~2 debug messages>
Optimizing module $paramod\count_zeros\LEN=4.
<suppressed ~18 debug messages>
Optimizing module $paramod\crc_coder\WCODE=4\WPOLY=5.
<suppressed ~8 debug messages>
Optimizing module $paramod\crc_eval\WCODE=4\WPOLY=4.
<suppressed ~8 debug messages>
Optimizing module $paramod\sm_to_u2\LEN=4.
<suppressed ~4 debug messages>
Optimizing module $paramod\adder\LEN=4.
Optimizing module watchdog.
<suppressed ~1 debug messages>
Optimizing module spi_exe_unit_1.
<suppressed ~3 debug messages>
Optimizing module sm_to_u2.
<suppressed ~4 debug messages>
Optimizing module shifter.
Optimizing module onehot2nkb_encoder.
<suppressed ~5 debug messages>
Optimizing module gray_koder2.
<suppressed ~2 debug messages>
Optimizing module exe_unit.
<suppressed ~15 debug messages>
Optimizing module crc_coder.
<suppressed ~8 debug messages>
Optimizing module crc_eval.
<suppressed ~8 debug messages>
Optimizing module count_zeros.
<suppressed ~18 debug messages>
Optimizing module adder.

12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\shifter\N=20..
Finding unused cells or wires in module $paramod\watchdog\N=5..
Finding unused cells or wires in module $paramod\exe_unit\N=4\M=4..
Finding unused cells or wires in module $paramod\onehot2nkb_encoder\LEN=4..
Finding unused cells or wires in module $paramod\gray_koder2\LEN=4..
Finding unused cells or wires in module $paramod\count_zeros\LEN=4..
Finding unused cells or wires in module $paramod\crc_coder\WCODE=4\WPOLY=5..
Finding unused cells or wires in module $paramod\crc_eval\WCODE=4\WPOLY=4..
Finding unused cells or wires in module $paramod\sm_to_u2\LEN=4..
Finding unused cells or wires in module $paramod\adder\LEN=4..
Finding unused cells or wires in module \watchdog..
Finding unused cells or wires in module \spi_exe_unit_1..
Finding unused cells or wires in module \sm_to_u2..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \onehot2nkb_encoder..
Finding unused cells or wires in module \gray_koder2..
Finding unused cells or wires in module \exe_unit..
Finding unused cells or wires in module \crc_coder..
Finding unused cells or wires in module \crc_eval..
Finding unused cells or wires in module \count_zeros..
Finding unused cells or wires in module \adder..
Removed 43 unused cells and 539 unused wires.
<suppressed ~70 debug messages>

12.5. Executing CHECK pass (checking for obvious problems).
checking module $paramod\adder\LEN=4..
checking module $paramod\count_zeros\LEN=4..
checking module $paramod\crc_coder\WCODE=4\WPOLY=5..
checking module $paramod\crc_eval\WCODE=4\WPOLY=4..
checking module $paramod\exe_unit\N=4\M=4..
checking module $paramod\gray_koder2\LEN=4..
checking module $paramod\onehot2nkb_encoder\LEN=4..
checking module $paramod\shifter\N=20..
checking module $paramod\sm_to_u2\LEN=4..
checking module $paramod\watchdog\N=5..
checking module adder..
checking module count_zeros..
checking module crc_coder..
checking module crc_eval..
checking module exe_unit..
checking module gray_koder2..
checking module onehot2nkb_encoder..
checking module shifter..
checking module sm_to_u2..
checking module spi_exe_unit_1..
checking module watchdog..
found and reported 0 problems.

12.6. Executing OPT pass (performing simple optimizations).

12.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\adder\LEN=4.
Optimizing module $paramod\count_zeros\LEN=4.
Optimizing module $paramod\crc_coder\WCODE=4\WPOLY=5.
Optimizing module $paramod\crc_eval\WCODE=4\WPOLY=4.
Optimizing module $paramod\exe_unit\N=4\M=4.
Optimizing module $paramod\gray_koder2\LEN=4.
Optimizing module $paramod\onehot2nkb_encoder\LEN=4.
Optimizing module $paramod\shifter\N=20.
Optimizing module $paramod\sm_to_u2\LEN=4.
Optimizing module $paramod\watchdog\N=5.
Optimizing module adder.
Optimizing module count_zeros.
Optimizing module crc_coder.
Optimizing module crc_eval.
Optimizing module exe_unit.
Optimizing module gray_koder2.
Optimizing module onehot2nkb_encoder.
Optimizing module shifter.
Optimizing module sm_to_u2.
Optimizing module spi_exe_unit_1.
Optimizing module watchdog.

12.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\adder\LEN=4'.
Finding identical cells in module `$paramod\count_zeros\LEN=4'.
Finding identical cells in module `$paramod\crc_coder\WCODE=4\WPOLY=5'.
Finding identical cells in module `$paramod\crc_eval\WCODE=4\WPOLY=4'.
Finding identical cells in module `$paramod\exe_unit\N=4\M=4'.
<suppressed ~6 debug messages>
Finding identical cells in module `$paramod\gray_koder2\LEN=4'.
Finding identical cells in module `$paramod\onehot2nkb_encoder\LEN=4'.
Finding identical cells in module `$paramod\shifter\N=20'.
Finding identical cells in module `$paramod\sm_to_u2\LEN=4'.
Finding identical cells in module `$paramod\watchdog\N=5'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\count_zeros'.
Finding identical cells in module `\crc_coder'.
Finding identical cells in module `\crc_eval'.
Finding identical cells in module `\exe_unit'.
<suppressed ~6 debug messages>
Finding identical cells in module `\gray_koder2'.
Finding identical cells in module `\onehot2nkb_encoder'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\sm_to_u2'.
Finding identical cells in module `\spi_exe_unit_1'.
<suppressed ~57 debug messages>
Finding identical cells in module `\watchdog'.
Removed a total of 23 cells.

12.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\adder\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$487.
Running muxtree optimizer on module $paramod\count_zeros\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc_coder\WCODE=4\WPOLY=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$460: { \i_data \i_crc } -> { 1'0 \i_data [2:0] \i_crc }
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc_eval\WCODE=4\WPOLY=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$472: { \i_data \i_crc } -> { 1'0 \i_data [2:0] \i_crc }
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\exe_unit\N=4\M=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\gray_koder2\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\onehot2nkb_encoder\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $procmux$365: $5\s_was1[0:0] -> 1'1
      Replacing known input bits on port B of cell $procmux$383: $3\s_was1[0:0] -> 1'1
      Replacing known input bits on port B of cell $procmux$401: $1\s_was1[0:0] -> 1'1
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$361.
    dead port 2/2 on $mux $procmux$367.
    dead port 2/2 on $mux $procmux$379.
    dead port 2/2 on $mux $procmux$385.
    dead port 2/2 on $mux $procmux$397.
    dead port 2/2 on $mux $procmux$403.
    dead port 2/2 on $mux $procmux$412.
    dead port 2/2 on $mux $procmux$415.
Running muxtree optimizer on module $paramod\shifter\N=20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$263.
Running muxtree optimizer on module $paramod\sm_to_u2\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$481: \i_a -> { 1'0 \i_a [2:0] }
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\watchdog\N=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$284.
    dead port 1/2 on $mux $procmux$290.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$818.
Running muxtree optimizer on module \count_zeros..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \crc_coder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$776: { \i_data \i_crc } -> { 1'0 \i_data [2:0] \i_crc }
  Analyzing evaluation results.
Running muxtree optimizer on module \crc_eval..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$788: { \i_data \i_crc } -> { 1'0 \i_data [2:0] \i_crc }
  Analyzing evaluation results.
Running muxtree optimizer on module \exe_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gray_koder2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \onehot2nkb_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $procmux$651: $5\s_was1[0:0] -> 1'1
      Replacing known input bits on port B of cell $procmux$669: $3\s_was1[0:0] -> 1'1
      Replacing known input bits on port B of cell $procmux$687: $1\s_was1[0:0] -> 1'1
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$647.
    dead port 2/2 on $mux $procmux$653.
    dead port 2/2 on $mux $procmux$665.
    dead port 2/2 on $mux $procmux$671.
    dead port 2/2 on $mux $procmux$683.
    dead port 2/2 on $mux $procmux$689.
    dead port 2/2 on $mux $procmux$698.
    dead port 2/2 on $mux $procmux$701.
Running muxtree optimizer on module \shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$627.
Running muxtree optimizer on module \sm_to_u2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$621: \i_a -> { 1'0 \i_a [2:0] }
  Analyzing evaluation results.
Running muxtree optimizer on module \spi_exe_unit_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$558.
    dead port 2/2 on $mux $procmux$522.
    dead port 2/2 on $mux $procmux$531.
    dead port 2/2 on $mux $procmux$540.
    dead port 2/2 on $mux $procmux$549.
Running muxtree optimizer on module \watchdog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$499.
    dead port 1/2 on $mux $procmux$505.
Removed 29 multiplexer ports.
<suppressed ~93 debug messages>

12.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\adder\LEN=4.
  Optimizing cells in module $paramod\count_zeros\LEN=4.
  Optimizing cells in module $paramod\crc_coder\WCODE=4\WPOLY=5.
  Optimizing cells in module $paramod\crc_eval\WCODE=4\WPOLY=4.
  Optimizing cells in module $paramod\exe_unit\N=4\M=4.
  Optimizing cells in module $paramod\gray_koder2\LEN=4.
  Optimizing cells in module $paramod\onehot2nkb_encoder\LEN=4.
    New ctrl vector for $mux cell $procmux$383: { }
    New ctrl vector for $mux cell $procmux$401: { }
    New ctrl vector for $mux cell $procmux$365: { }
    New ctrl vector for $mux cell $procmux$421: { }
  Optimizing cells in module $paramod\onehot2nkb_encoder\LEN=4.
  Optimizing cells in module $paramod\shifter\N=20.
  Optimizing cells in module $paramod\sm_to_u2\LEN=4.
  Optimizing cells in module $paramod\watchdog\N=5.
  Optimizing cells in module \adder.
  Optimizing cells in module \count_zeros.
  Optimizing cells in module \crc_coder.
  Optimizing cells in module \crc_eval.
  Optimizing cells in module \exe_unit.
  Optimizing cells in module \gray_koder2.
  Optimizing cells in module \onehot2nkb_encoder.
    New ctrl vector for $mux cell $procmux$669: { }
    New ctrl vector for $mux cell $procmux$687: { }
    New ctrl vector for $mux cell $procmux$651: { }
    New ctrl vector for $mux cell $procmux$707: { }
  Optimizing cells in module \onehot2nkb_encoder.
  Optimizing cells in module \shifter.
  Optimizing cells in module \sm_to_u2.
  Optimizing cells in module \spi_exe_unit_1.
    New ctrl vector for $pmux cell $procmux$579: { $procmux$532_CMP $auto$opt_reduce.cc:132:opt_mux$839 }
  Optimizing cells in module \spi_exe_unit_1.
  Optimizing cells in module \watchdog.
Performed a total of 9 changes.

12.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\adder\LEN=4'.
Finding identical cells in module `$paramod\count_zeros\LEN=4'.
Finding identical cells in module `$paramod\crc_coder\WCODE=4\WPOLY=5'.
Finding identical cells in module `$paramod\crc_eval\WCODE=4\WPOLY=4'.
Finding identical cells in module `$paramod\exe_unit\N=4\M=4'.
<suppressed ~21 debug messages>
Finding identical cells in module `$paramod\gray_koder2\LEN=4'.
Finding identical cells in module `$paramod\onehot2nkb_encoder\LEN=4'.
Finding identical cells in module `$paramod\shifter\N=20'.
Finding identical cells in module `$paramod\sm_to_u2\LEN=4'.
Finding identical cells in module `$paramod\watchdog\N=5'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\count_zeros'.
Finding identical cells in module `\crc_coder'.
Finding identical cells in module `\crc_eval'.
Finding identical cells in module `\exe_unit'.
<suppressed ~21 debug messages>
Finding identical cells in module `\gray_koder2'.
Finding identical cells in module `\onehot2nkb_encoder'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\sm_to_u2'.
Finding identical cells in module `\spi_exe_unit_1'.
<suppressed ~3 debug messages>
Finding identical cells in module `\watchdog'.
Removed a total of 15 cells.

12.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

12.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\adder\LEN=4..
Finding unused cells or wires in module $paramod\count_zeros\LEN=4..
Finding unused cells or wires in module $paramod\crc_coder\WCODE=4\WPOLY=5..
Finding unused cells or wires in module $paramod\crc_eval\WCODE=4\WPOLY=4..
Finding unused cells or wires in module $paramod\exe_unit\N=4\M=4..
Finding unused cells or wires in module $paramod\gray_koder2\LEN=4..
Finding unused cells or wires in module $paramod\onehot2nkb_encoder\LEN=4..
Finding unused cells or wires in module $paramod\shifter\N=20..
Finding unused cells or wires in module $paramod\sm_to_u2\LEN=4..
Finding unused cells or wires in module $paramod\watchdog\N=5..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \count_zeros..
Finding unused cells or wires in module \crc_coder..
Finding unused cells or wires in module \crc_eval..
Finding unused cells or wires in module \exe_unit..
Finding unused cells or wires in module \gray_koder2..
Finding unused cells or wires in module \onehot2nkb_encoder..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \sm_to_u2..
Finding unused cells or wires in module \spi_exe_unit_1..
Finding unused cells or wires in module \watchdog..
Removed 0 unused cells and 75 unused wires.
<suppressed ~11 debug messages>

12.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\adder\LEN=4.
Optimizing module $paramod\count_zeros\LEN=4.
Optimizing module $paramod\crc_coder\WCODE=4\WPOLY=5.
Optimizing module $paramod\crc_eval\WCODE=4\WPOLY=4.
Optimizing module $paramod\exe_unit\N=4\M=4.
Optimizing module $paramod\gray_koder2\LEN=4.
Optimizing module $paramod\onehot2nkb_encoder\LEN=4.
Optimizing module $paramod\shifter\N=20.
Optimizing module $paramod\sm_to_u2\LEN=4.
Optimizing module $paramod\watchdog\N=5.
Optimizing module adder.
Optimizing module count_zeros.
Optimizing module crc_coder.
Optimizing module crc_eval.
Optimizing module exe_unit.
Optimizing module gray_koder2.
Optimizing module onehot2nkb_encoder.
Optimizing module shifter.
Optimizing module sm_to_u2.
Optimizing module spi_exe_unit_1.
Optimizing module watchdog.

12.6.9. Rerunning OPT passes. (Maybe there is more to do..)

12.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\adder\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\count_zeros\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc_coder\WCODE=4\WPOLY=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc_eval\WCODE=4\WPOLY=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\exe_unit\N=4\M=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\gray_koder2\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\onehot2nkb_encoder\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\shifter\N=20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\sm_to_u2\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\watchdog\N=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \count_zeros..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \crc_coder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \crc_eval..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exe_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gray_koder2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \onehot2nkb_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sm_to_u2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spi_exe_unit_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \watchdog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~84 debug messages>

12.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\adder\LEN=4.
  Optimizing cells in module $paramod\count_zeros\LEN=4.
  Optimizing cells in module $paramod\crc_coder\WCODE=4\WPOLY=5.
  Optimizing cells in module $paramod\crc_eval\WCODE=4\WPOLY=4.
  Optimizing cells in module $paramod\exe_unit\N=4\M=4.
  Optimizing cells in module $paramod\gray_koder2\LEN=4.
  Optimizing cells in module $paramod\onehot2nkb_encoder\LEN=4.
  Optimizing cells in module $paramod\shifter\N=20.
  Optimizing cells in module $paramod\sm_to_u2\LEN=4.
  Optimizing cells in module $paramod\watchdog\N=5.
  Optimizing cells in module \adder.
  Optimizing cells in module \count_zeros.
  Optimizing cells in module \crc_coder.
  Optimizing cells in module \crc_eval.
  Optimizing cells in module \exe_unit.
  Optimizing cells in module \gray_koder2.
  Optimizing cells in module \onehot2nkb_encoder.
  Optimizing cells in module \shifter.
  Optimizing cells in module \sm_to_u2.
  Optimizing cells in module \spi_exe_unit_1.
  Optimizing cells in module \watchdog.
Performed a total of 0 changes.

12.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\adder\LEN=4'.
Finding identical cells in module `$paramod\count_zeros\LEN=4'.
Finding identical cells in module `$paramod\crc_coder\WCODE=4\WPOLY=5'.
Finding identical cells in module `$paramod\crc_eval\WCODE=4\WPOLY=4'.
Finding identical cells in module `$paramod\exe_unit\N=4\M=4'.
Finding identical cells in module `$paramod\gray_koder2\LEN=4'.
Finding identical cells in module `$paramod\onehot2nkb_encoder\LEN=4'.
Finding identical cells in module `$paramod\shifter\N=20'.
Finding identical cells in module `$paramod\sm_to_u2\LEN=4'.
Finding identical cells in module `$paramod\watchdog\N=5'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\count_zeros'.
Finding identical cells in module `\crc_coder'.
Finding identical cells in module `\crc_eval'.
Finding identical cells in module `\exe_unit'.
Finding identical cells in module `\gray_koder2'.
Finding identical cells in module `\onehot2nkb_encoder'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\sm_to_u2'.
Finding identical cells in module `\spi_exe_unit_1'.
Finding identical cells in module `\watchdog'.
Removed a total of 0 cells.

12.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

12.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\adder\LEN=4..
Finding unused cells or wires in module $paramod\count_zeros\LEN=4..
Finding unused cells or wires in module $paramod\crc_coder\WCODE=4\WPOLY=5..
Finding unused cells or wires in module $paramod\crc_eval\WCODE=4\WPOLY=4..
Finding unused cells or wires in module $paramod\exe_unit\N=4\M=4..
Finding unused cells or wires in module $paramod\gray_koder2\LEN=4..
Finding unused cells or wires in module $paramod\onehot2nkb_encoder\LEN=4..
Finding unused cells or wires in module $paramod\shifter\N=20..
Finding unused cells or wires in module $paramod\sm_to_u2\LEN=4..
Finding unused cells or wires in module $paramod\watchdog\N=5..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \count_zeros..
Finding unused cells or wires in module \crc_coder..
Finding unused cells or wires in module \crc_eval..
Finding unused cells or wires in module \exe_unit..
Finding unused cells or wires in module \gray_koder2..
Finding unused cells or wires in module \onehot2nkb_encoder..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \sm_to_u2..
Finding unused cells or wires in module \spi_exe_unit_1..
Finding unused cells or wires in module \watchdog..

12.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\adder\LEN=4.
Optimizing module $paramod\count_zeros\LEN=4.
Optimizing module $paramod\crc_coder\WCODE=4\WPOLY=5.
Optimizing module $paramod\crc_eval\WCODE=4\WPOLY=4.
Optimizing module $paramod\exe_unit\N=4\M=4.
Optimizing module $paramod\gray_koder2\LEN=4.
Optimizing module $paramod\onehot2nkb_encoder\LEN=4.
Optimizing module $paramod\shifter\N=20.
Optimizing module $paramod\sm_to_u2\LEN=4.
Optimizing module $paramod\watchdog\N=5.
Optimizing module adder.
Optimizing module count_zeros.
Optimizing module crc_coder.
Optimizing module crc_eval.
Optimizing module exe_unit.
Optimizing module gray_koder2.
Optimizing module onehot2nkb_encoder.
Optimizing module shifter.
Optimizing module sm_to_u2.
Optimizing module spi_exe_unit_1.
Optimizing module watchdog.

12.6.16. Finished OPT passes. (There is nothing left to do.)

12.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 3 bits (of 4) from mux cell $paramod\count_zeros\LEN=4.$procmux$448 ($mux).
Removed top 3 bits (of 4) from wire $paramod\count_zeros\LEN=4.$1\zeros[3:0].
Removed top 1 bits (of 8) from port B of cell $paramod\crc_coder\WCODE=4\WPOLY=5.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$172 ($xor).
Removed top 2 bits (of 8) from port B of cell $paramod\crc_coder\WCODE=4\WPOLY=5.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$175 ($xor).
Removed top 3 bits (of 8) from port B of cell $paramod\crc_coder\WCODE=4\WPOLY=5.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$178 ($xor).
Removed top 4 bits (of 8) from mux cell $paramod\crc_coder\WCODE=4\WPOLY=5.$procmux$451 ($mux).
Removed top 4 bits (of 8) from port Y of cell $paramod\crc_coder\WCODE=4\WPOLY=5.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$178 ($xor).
Removed top 4 bits (of 8) from port A of cell $paramod\crc_coder\WCODE=4\WPOLY=5.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$178 ($xor).
Removed top 1 bits (of 5) from port B of cell $paramod\crc_coder\WCODE=4\WPOLY=5.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$178 ($xor).
Removed top 4 bits (of 8) from mux cell $paramod\crc_coder\WCODE=4\WPOLY=5.$procmux$454 ($mux).
Removed top 4 bits (of 8) from port Y of cell $paramod\crc_coder\WCODE=4\WPOLY=5.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$175 ($xor).
Removed top 4 bits (of 8) from port A of cell $paramod\crc_coder\WCODE=4\WPOLY=5.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$175 ($xor).
Removed top 2 bits (of 6) from port B of cell $paramod\crc_coder\WCODE=4\WPOLY=5.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$175 ($xor).
Removed top 4 bits (of 8) from mux cell $paramod\crc_coder\WCODE=4\WPOLY=5.$procmux$457 ($mux).
Removed top 4 bits (of 8) from port Y of cell $paramod\crc_coder\WCODE=4\WPOLY=5.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$172 ($xor).
Removed top 4 bits (of 8) from port A of cell $paramod\crc_coder\WCODE=4\WPOLY=5.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$172 ($xor).
Removed top 3 bits (of 7) from port B of cell $paramod\crc_coder\WCODE=4\WPOLY=5.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$172 ($xor).
Removed top 4 bits (of 8) from mux cell $paramod\crc_coder\WCODE=4\WPOLY=5.$procmux$460 ($mux).
Removed top 4 bits (of 8) from port Y of cell $paramod\crc_coder\WCODE=4\WPOLY=5.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$169 ($xor).
Removed top 4 bits (of 8) from port A of cell $paramod\crc_coder\WCODE=4\WPOLY=5.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$169 ($xor).
Removed top 4 bits (of 8) from port B of cell $paramod\crc_coder\WCODE=4\WPOLY=5.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$169 ($xor).
Removed top 4 bits (of 8) from wire $paramod\crc_coder\WCODE=4\WPOLY=5.$1\crc_tmp[7:0].
Removed top 4 bits (of 8) from wire $paramod\crc_coder\WCODE=4\WPOLY=5.$2\crc_tmp[7:0].
Removed top 4 bits (of 8) from wire $paramod\crc_coder\WCODE=4\WPOLY=5.$3\crc_tmp[7:0].
Removed top 4 bits (of 8) from wire $paramod\crc_coder\WCODE=4\WPOLY=5.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$169_Y.
Removed top 4 bits (of 8) from wire $paramod\crc_coder\WCODE=4\WPOLY=5.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$175_Y.
Removed top 4 bits (of 8) from wire $paramod\crc_coder\WCODE=4\WPOLY=5.poly_tmp.
Removed top 1 bits (of 7) from port B of cell $paramod\crc_eval\WCODE=4\WPOLY=4.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$155 ($xor).
Removed top 2 bits (of 7) from port B of cell $paramod\crc_eval\WCODE=4\WPOLY=4.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$158 ($xor).
Removed top 3 bits (of 7) from port B of cell $paramod\crc_eval\WCODE=4\WPOLY=4.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$161 ($xor).
Removed top 4 bits (of 7) from mux cell $paramod\crc_eval\WCODE=4\WPOLY=4.$procmux$463 ($mux).
Removed top 4 bits (of 7) from port Y of cell $paramod\crc_eval\WCODE=4\WPOLY=4.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$161 ($xor).
Removed top 4 bits (of 7) from port A of cell $paramod\crc_eval\WCODE=4\WPOLY=4.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$161 ($xor).
Removed top 1 bits (of 4) from port B of cell $paramod\crc_eval\WCODE=4\WPOLY=4.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$161 ($xor).
Removed top 4 bits (of 7) from mux cell $paramod\crc_eval\WCODE=4\WPOLY=4.$procmux$466 ($mux).
Removed top 4 bits (of 7) from port Y of cell $paramod\crc_eval\WCODE=4\WPOLY=4.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$158 ($xor).
Removed top 4 bits (of 7) from port A of cell $paramod\crc_eval\WCODE=4\WPOLY=4.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$158 ($xor).
Removed top 2 bits (of 5) from port B of cell $paramod\crc_eval\WCODE=4\WPOLY=4.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$158 ($xor).
Removed top 4 bits (of 7) from mux cell $paramod\crc_eval\WCODE=4\WPOLY=4.$procmux$469 ($mux).
Removed top 4 bits (of 7) from port Y of cell $paramod\crc_eval\WCODE=4\WPOLY=4.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$155 ($xor).
Removed top 4 bits (of 7) from port A of cell $paramod\crc_eval\WCODE=4\WPOLY=4.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$155 ($xor).
Removed top 3 bits (of 6) from port B of cell $paramod\crc_eval\WCODE=4\WPOLY=4.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$155 ($xor).
Removed top 4 bits (of 7) from mux cell $paramod\crc_eval\WCODE=4\WPOLY=4.$procmux$472 ($mux).
Removed top 4 bits (of 7) from port Y of cell $paramod\crc_eval\WCODE=4\WPOLY=4.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$152 ($xor).
Removed top 4 bits (of 7) from port A of cell $paramod\crc_eval\WCODE=4\WPOLY=4.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$152 ($xor).
Removed top 6 bits (of 7) from port B of cell $paramod\crc_eval\WCODE=4\WPOLY=4.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$152 ($xor).
Removed top 4 bits (of 7) from wire $paramod\crc_eval\WCODE=4\WPOLY=4.$1\crc_tmp[6:0].
Removed top 4 bits (of 7) from wire $paramod\crc_eval\WCODE=4\WPOLY=4.$2\crc_tmp[6:0].
Removed top 4 bits (of 7) from wire $paramod\crc_eval\WCODE=4\WPOLY=4.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$152_Y.
Removed top 4 bits (of 7) from wire $paramod\crc_eval\WCODE=4\WPOLY=4.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$155_Y.
Removed top 4 bits (of 7) from wire $paramod\crc_eval\WCODE=4\WPOLY=4.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$158_Y.
Removed top 4 bits (of 7) from wire $paramod\crc_eval\WCODE=4\WPOLY=4.crc_tmp.
Removed top 4 bits (of 7) from wire $paramod\crc_eval\WCODE=4\WPOLY=4.poly_tmp.
Removed top 30 bits (of 32) from port B of cell $paramod\exe_unit\N=4\M=4.$add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:97$234 ($add).
Removed top 30 bits (of 32) from port B of cell $paramod\exe_unit\N=4\M=4.$add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:97$236 ($add).
Removed top 30 bits (of 32) from port B of cell $paramod\exe_unit\N=4\M=4.$eq$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:100$239 ($eq).
Removed top 30 bits (of 32) from port B of cell $paramod\exe_unit\N=4\M=4.$add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:107$247 ($add).
Removed top 30 bits (of 32) from port B of cell $paramod\exe_unit\N=4\M=4.$eq$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:110$249 ($eq).
Removed top 31 bits (of 32) from mux cell $paramod\exe_unit\N=4\M=4.$procmux$314 ($mux).
Removed top 1 bits (of 4) from port B of cell $paramod\exe_unit\N=4\M=4.$procmux$340_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod\exe_unit\N=4\M=4.$procmux$347_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod\exe_unit\N=4\M=4.$procmux$349_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod\exe_unit\N=4\M=4.$procmux$350_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell $paramod\exe_unit\N=4\M=4.$procmux$351_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell $paramod\exe_unit\N=4\M=4.$procmux$352_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell $paramod\exe_unit\N=4\M=4.$procmux$353_CMP0 ($eq).
Removed top 31 bits (of 32) from wire $paramod\exe_unit\N=4\M=4.$1\counter[31:0].
Removed top 2 bits (of 4) from wire $paramod\exe_unit\N=4\M=4.nkb_code.
Removed top 1 bits (of 2) from mux cell $paramod\onehot2nkb_encoder\LEN=4.$procmux$377 ($mux).
Removed top 1 bits (of 2) from wire $paramod\onehot2nkb_encoder\LEN=4.$6\o_nkb[1:0].
Removed top 1 bits (of 4) from port Y of cell $paramod\sm_to_u2\LEN=4.$add$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:18$145 ($add).
Removed top 1 bits (of 4) from port A of cell $paramod\sm_to_u2\LEN=4.$add$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:18$145 ($add).
Removed top 1 bits (of 4) from port Y of cell $paramod\sm_to_u2\LEN=4.$not$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:17$144 ($not).
Removed top 1 bits (of 4) from port A of cell $paramod\sm_to_u2\LEN=4.$not$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:17$144 ($not).
Removed top 1 bits (of 4) from wire $paramod\sm_to_u2\LEN=4.$add$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:18$145_Y.
Removed top 1 bits (of 4) from wire $paramod\sm_to_u2\LEN=4.$not$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:17$144_Y.
Removed top 31 bits (of 32) from port B of cell $paramod\watchdog\N=5.$gt$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:53$253 ($gt).
Removed top 31 bits (of 32) from port B of cell $paramod\watchdog\N=5.$sub$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:54$254 ($sub).
Removed top 27 bits (of 32) from port Y of cell $paramod\watchdog\N=5.$sub$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:54$254 ($sub).
Removed top 27 bits (of 32) from wire $paramod\watchdog\N=5.$sub$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:54$254_Y.
Removed top 3 bits (of 4) from mux cell count_zeros.$procmux$812 ($mux).
Removed top 3 bits (of 4) from wire count_zeros.$1\zeros[3:0].
Removed top 1 bits (of 8) from port B of cell crc_coder.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$52 ($xor).
Removed top 2 bits (of 8) from port B of cell crc_coder.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$55 ($xor).
Removed top 3 bits (of 8) from port B of cell crc_coder.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$58 ($xor).
Removed top 4 bits (of 8) from mux cell crc_coder.$procmux$767 ($mux).
Removed top 4 bits (of 8) from port Y of cell crc_coder.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$58 ($xor).
Removed top 4 bits (of 8) from port A of cell crc_coder.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$58 ($xor).
Removed top 1 bits (of 5) from port B of cell crc_coder.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$58 ($xor).
Removed top 4 bits (of 8) from mux cell crc_coder.$procmux$770 ($mux).
Removed top 4 bits (of 8) from port Y of cell crc_coder.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$55 ($xor).
Removed top 4 bits (of 8) from port A of cell crc_coder.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$55 ($xor).
Removed top 2 bits (of 6) from port B of cell crc_coder.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$55 ($xor).
Removed top 4 bits (of 8) from mux cell crc_coder.$procmux$773 ($mux).
Removed top 4 bits (of 8) from port Y of cell crc_coder.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$52 ($xor).
Removed top 4 bits (of 8) from port A of cell crc_coder.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$52 ($xor).
Removed top 3 bits (of 7) from port B of cell crc_coder.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$52 ($xor).
Removed top 4 bits (of 8) from mux cell crc_coder.$procmux$776 ($mux).
Removed top 4 bits (of 8) from port Y of cell crc_coder.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$49 ($xor).
Removed top 4 bits (of 8) from port A of cell crc_coder.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$49 ($xor).
Removed top 4 bits (of 8) from port B of cell crc_coder.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$49 ($xor).
Removed top 4 bits (of 8) from wire crc_coder.$1\crc_tmp[7:0].
Removed top 4 bits (of 8) from wire crc_coder.$2\crc_tmp[7:0].
Removed top 4 bits (of 8) from wire crc_coder.$3\crc_tmp[7:0].
Removed top 4 bits (of 8) from wire crc_coder.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$49_Y.
Removed top 4 bits (of 8) from wire crc_coder.$xor$../MODEL/SPI_EXE_UNIT_1/crc_koder.sv:24$52_Y.
Removed top 4 bits (of 8) from wire crc_coder.poly_tmp.
Removed top 1 bits (of 7) from port B of cell crc_eval.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$35 ($xor).
Removed top 2 bits (of 7) from port B of cell crc_eval.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$38 ($xor).
Removed top 3 bits (of 7) from port B of cell crc_eval.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$41 ($xor).
Removed top 4 bits (of 7) from mux cell crc_eval.$procmux$779 ($mux).
Removed top 4 bits (of 7) from port Y of cell crc_eval.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$41 ($xor).
Removed top 4 bits (of 7) from port A of cell crc_eval.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$41 ($xor).
Removed top 1 bits (of 4) from port B of cell crc_eval.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$41 ($xor).
Removed top 4 bits (of 7) from mux cell crc_eval.$procmux$782 ($mux).
Removed top 4 bits (of 7) from port Y of cell crc_eval.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$38 ($xor).
Removed top 4 bits (of 7) from port A of cell crc_eval.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$38 ($xor).
Removed top 2 bits (of 5) from port B of cell crc_eval.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$38 ($xor).
Removed top 4 bits (of 7) from mux cell crc_eval.$procmux$785 ($mux).
Removed top 4 bits (of 7) from port Y of cell crc_eval.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$35 ($xor).
Removed top 4 bits (of 7) from port A of cell crc_eval.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$35 ($xor).
Removed top 3 bits (of 6) from port B of cell crc_eval.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$35 ($xor).
Removed top 4 bits (of 7) from mux cell crc_eval.$procmux$788 ($mux).
Removed top 4 bits (of 7) from port Y of cell crc_eval.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$32 ($xor).
Removed top 4 bits (of 7) from port A of cell crc_eval.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$32 ($xor).
Removed top 6 bits (of 7) from port B of cell crc_eval.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$32 ($xor).
Removed top 4 bits (of 7) from wire crc_eval.$1\crc_tmp[6:0].
Removed top 4 bits (of 7) from wire crc_eval.$2\crc_tmp[6:0].
Removed top 4 bits (of 7) from wire crc_eval.$3\crc_tmp[6:0].
Removed top 4 bits (of 7) from wire crc_eval.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$32_Y.
Removed top 4 bits (of 7) from wire crc_eval.$xor$../MODEL/SPI_EXE_UNIT_1/crc3_eval.sv:23$35_Y.
Removed top 4 bits (of 7) from wire crc_eval.crc_tmp.
Removed top 4 bits (of 7) from wire crc_eval.poly_tmp.
Removed top 30 bits (of 32) from port B of cell exe_unit.$add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:97$79 ($add).
Removed top 30 bits (of 32) from port B of cell exe_unit.$add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:97$81 ($add).
Removed top 30 bits (of 32) from port B of cell exe_unit.$eq$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:100$84 ($eq).
Removed top 30 bits (of 32) from port B of cell exe_unit.$eq$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:110$94 ($eq).
Removed top 30 bits (of 32) from port B of cell exe_unit.$add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:107$92 ($add).
Removed top 31 bits (of 32) from mux cell exe_unit.$procmux$725 ($mux).
Removed top 1 bits (of 4) from port B of cell exe_unit.$procmux$751_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell exe_unit.$procmux$758_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell exe_unit.$procmux$760_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell exe_unit.$procmux$761_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell exe_unit.$procmux$762_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell exe_unit.$procmux$763_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell exe_unit.$procmux$764_CMP0 ($eq).
Removed top 31 bits (of 32) from wire exe_unit.$1\counter[31:0].
Removed top 2 bits (of 4) from wire exe_unit.nkb_code.
Removed top 1 bits (of 2) from mux cell onehot2nkb_encoder.$procmux$663 ($mux).
Removed top 1 bits (of 2) from wire onehot2nkb_encoder.$6\o_nkb[1:0].
Removed top 1 bits (of 4) from port Y of cell sm_to_u2.$add$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:18$115 ($add).
Removed top 1 bits (of 4) from port A of cell sm_to_u2.$add$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:18$115 ($add).
Removed top 1 bits (of 4) from port Y of cell sm_to_u2.$not$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:17$114 ($not).
Removed top 1 bits (of 4) from port A of cell sm_to_u2.$not$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:17$114 ($not).
Removed top 1 bits (of 4) from wire sm_to_u2.$add$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:18$115_Y.
Removed top 1 bits (of 4) from wire sm_to_u2.$not$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:17$114_Y.
Removed top 2 bits (of 3) from port B of cell spi_exe_unit_1.$eq$../MODEL/SPI_EXE_UNIT_1/spi_exe_unit_1.sv:88$117 ($eq).
Removed top 2 bits (of 4) from port B of cell spi_exe_unit_1.$procmux$523_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell spi_exe_unit_1.$procmux$532_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell spi_exe_unit_1.$procmux$563_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell watchdog.$sub$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:54$136 ($sub).
Removed top 20 bits (of 32) from port Y of cell watchdog.$sub$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:54$136 ($sub).
Removed top 31 bits (of 32) from port B of cell watchdog.$gt$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:53$135 ($gt).
Removed top 20 bits (of 32) from wire watchdog.$sub$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:54$136_Y.
Removed top 3 bits (of 12) from wire watchdog.s_count.
Removed top 3 bits (of 12) from wire watchdog.s_count_next.

12.8. Executing PEEPOPT pass (run peephole optimizers).

12.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\adder\LEN=4..
Finding unused cells or wires in module $paramod\count_zeros\LEN=4..
Finding unused cells or wires in module $paramod\crc_coder\WCODE=4\WPOLY=5..
Finding unused cells or wires in module $paramod\crc_eval\WCODE=4\WPOLY=4..
Finding unused cells or wires in module $paramod\exe_unit\N=4\M=4..
Finding unused cells or wires in module $paramod\gray_koder2\LEN=4..
Finding unused cells or wires in module $paramod\onehot2nkb_encoder\LEN=4..
Finding unused cells or wires in module $paramod\shifter\N=20..
Finding unused cells or wires in module $paramod\sm_to_u2\LEN=4..
Finding unused cells or wires in module $paramod\watchdog\N=5..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \count_zeros..
Finding unused cells or wires in module \crc_coder..
Finding unused cells or wires in module \crc_eval..
Finding unused cells or wires in module \exe_unit..
Finding unused cells or wires in module \gray_koder2..
Finding unused cells or wires in module \onehot2nkb_encoder..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \sm_to_u2..
Finding unused cells or wires in module \spi_exe_unit_1..
Finding unused cells or wires in module \watchdog..
Removed 0 unused cells and 40 unused wires.
<suppressed ~14 debug messages>

12.10. Executing TECHMAP pass (map to technology primitives).

12.10.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

12.10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~292 debug messages>

12.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $paramod\adder\LEN=4:
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/adder.sv:12$139 ($add).
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/adder.sv:12$139.
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/adder.sv:12$139: $auto$alumacc.cc:474:replace_alu$882
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\count_zeros\LEN=4:
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:21$190 ($add).
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:21$194 ($add).
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:21$198 ($add).
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$188 ($add).
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$192 ($add).
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$196 ($add).
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$200 ($add).
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$200.
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$196.
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$192.
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$188.
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:21$198.
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:21$194.
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:21$190.
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:21$190: $auto$alumacc.cc:474:replace_alu$885
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:21$194: $auto$alumacc.cc:474:replace_alu$888
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:21$198: $auto$alumacc.cc:474:replace_alu$891
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$188: $auto$alumacc.cc:474:replace_alu$894
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$192: $auto$alumacc.cc:474:replace_alu$897
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$196: $auto$alumacc.cc:474:replace_alu$900
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$200: $auto$alumacc.cc:474:replace_alu$903
  created 7 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\crc_coder\WCODE=4\WPOLY=5:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\crc_eval\WCODE=4\WPOLY=4:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\exe_unit\N=4\M=4:
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:107$247 ($add).
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:97$234 ($add).
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:97$236 ($add).
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:97$236.
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:97$234.
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:107$247.
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:107$247: $auto$alumacc.cc:474:replace_alu$906
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:97$234: $auto$alumacc.cc:474:replace_alu$909
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:97$236: $auto$alumacc.cc:474:replace_alu$912
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\gray_koder2\LEN=4:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\onehot2nkb_encoder\LEN=4:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\shifter\N=20:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\sm_to_u2\LEN=4:
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:18$145 ($add).
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:18$145.
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:18$145: $auto$alumacc.cc:474:replace_alu$915
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\watchdog\N=5:
  creating $macc model for $sub$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:54$254 ($sub).
  creating $alu model for $macc $sub$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:54$254.
  creating $alu model for $gt$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:53$253 ($gt): new $alu
  creating $alu cell for $gt$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:53$253: $auto$alumacc.cc:474:replace_alu$919
  creating $alu cell for $sub$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:54$254: $auto$alumacc.cc:474:replace_alu$924
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module adder:
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/adder.sv:12$2 ($add).
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/adder.sv:12$2.
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/adder.sv:12$2: $auto$alumacc.cc:474:replace_alu$927
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module count_zeros:
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:21$15 ($add).
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:21$19 ($add).
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:21$23 ($add).
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$13 ($add).
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$17 ($add).
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$21 ($add).
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$25 ($add).
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$25.
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$21.
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$17.
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$13.
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:21$23.
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:21$19.
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:21$15.
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:21$15: $auto$alumacc.cc:474:replace_alu$930
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:21$19: $auto$alumacc.cc:474:replace_alu$933
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:21$23: $auto$alumacc.cc:474:replace_alu$936
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$13: $auto$alumacc.cc:474:replace_alu$939
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$17: $auto$alumacc.cc:474:replace_alu$942
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$21: $auto$alumacc.cc:474:replace_alu$945
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/count_zeros.sv:25$25: $auto$alumacc.cc:474:replace_alu$948
  created 7 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module crc_coder:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module crc_eval:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module exe_unit:
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:107$92 ($add).
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:97$79 ($add).
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:97$81 ($add).
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:97$81.
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:97$79.
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:107$92.
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:107$92: $auto$alumacc.cc:474:replace_alu$951
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:97$79: $auto$alumacc.cc:474:replace_alu$954
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/exe_unit.sv:97$81: $auto$alumacc.cc:474:replace_alu$957
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module gray_koder2:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module onehot2nkb_encoder:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module shifter:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module sm_to_u2:
  creating $macc model for $add$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:18$115 ($add).
  creating $alu model for $macc $add$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:18$115.
  creating $alu cell for $add$../MODEL/SPI_EXE_UNIT_1/sm_to_u2.sv:18$115: $auto$alumacc.cc:474:replace_alu$960
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module spi_exe_unit_1:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module watchdog:
  creating $macc model for $sub$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:54$136 ($sub).
  creating $alu model for $macc $sub$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:54$136.
  creating $alu model for $gt$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:53$135 ($gt): new $alu
  creating $alu cell for $gt$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:53$135: $auto$alumacc.cc:474:replace_alu$964
  creating $alu cell for $sub$../MODEL/SPI_EXE_UNIT_1/watchdog.sv:54$136: $auto$alumacc.cc:474:replace_alu$969
  created 2 $alu and 0 $macc cells.

12.12. Executing SHARE pass (SAT-based resource sharing).

12.13. Executing OPT pass (performing simple optimizations).

12.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\adder\LEN=4.
Optimizing module $paramod\count_zeros\LEN=4.
Optimizing module $paramod\crc_coder\WCODE=4\WPOLY=5.
Optimizing module $paramod\crc_eval\WCODE=4\WPOLY=4.
<suppressed ~1 debug messages>
Optimizing module $paramod\exe_unit\N=4\M=4.
Optimizing module $paramod\gray_koder2\LEN=4.
Optimizing module $paramod\onehot2nkb_encoder\LEN=4.
Optimizing module $paramod\shifter\N=20.
Optimizing module $paramod\sm_to_u2\LEN=4.
Optimizing module $paramod\watchdog\N=5.
<suppressed ~2 debug messages>
Optimizing module adder.
Optimizing module count_zeros.
Optimizing module crc_coder.
Optimizing module crc_eval.
<suppressed ~1 debug messages>
Optimizing module exe_unit.
Optimizing module gray_koder2.
Optimizing module onehot2nkb_encoder.
Optimizing module shifter.
Optimizing module sm_to_u2.
Optimizing module spi_exe_unit_1.
Optimizing module watchdog.
<suppressed ~2 debug messages>

12.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\adder\LEN=4'.
Finding identical cells in module `$paramod\count_zeros\LEN=4'.
Finding identical cells in module `$paramod\crc_coder\WCODE=4\WPOLY=5'.
Finding identical cells in module `$paramod\crc_eval\WCODE=4\WPOLY=4'.
Finding identical cells in module `$paramod\exe_unit\N=4\M=4'.
Finding identical cells in module `$paramod\gray_koder2\LEN=4'.
Finding identical cells in module `$paramod\onehot2nkb_encoder\LEN=4'.
Finding identical cells in module `$paramod\shifter\N=20'.
Finding identical cells in module `$paramod\sm_to_u2\LEN=4'.
Finding identical cells in module `$paramod\watchdog\N=5'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\count_zeros'.
Finding identical cells in module `\crc_coder'.
Finding identical cells in module `\crc_eval'.
Finding identical cells in module `\exe_unit'.
Finding identical cells in module `\gray_koder2'.
Finding identical cells in module `\onehot2nkb_encoder'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\sm_to_u2'.
Finding identical cells in module `\spi_exe_unit_1'.
Finding identical cells in module `\watchdog'.
Removed a total of 0 cells.

12.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\adder\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\count_zeros\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc_coder\WCODE=4\WPOLY=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc_eval\WCODE=4\WPOLY=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\exe_unit\N=4\M=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\gray_koder2\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\onehot2nkb_encoder\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\shifter\N=20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\sm_to_u2\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\watchdog\N=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \count_zeros..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \crc_coder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \crc_eval..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exe_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gray_koder2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \onehot2nkb_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sm_to_u2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spi_exe_unit_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \watchdog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~84 debug messages>

12.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\adder\LEN=4.
  Optimizing cells in module $paramod\count_zeros\LEN=4.
  Optimizing cells in module $paramod\crc_coder\WCODE=4\WPOLY=5.
  Optimizing cells in module $paramod\crc_eval\WCODE=4\WPOLY=4.
  Optimizing cells in module $paramod\exe_unit\N=4\M=4.
  Optimizing cells in module $paramod\gray_koder2\LEN=4.
  Optimizing cells in module $paramod\onehot2nkb_encoder\LEN=4.
  Optimizing cells in module $paramod\shifter\N=20.
  Optimizing cells in module $paramod\sm_to_u2\LEN=4.
  Optimizing cells in module $paramod\watchdog\N=5.
  Optimizing cells in module \adder.
  Optimizing cells in module \count_zeros.
  Optimizing cells in module \crc_coder.
  Optimizing cells in module \crc_eval.
  Optimizing cells in module \exe_unit.
  Optimizing cells in module \gray_koder2.
  Optimizing cells in module \onehot2nkb_encoder.
  Optimizing cells in module \shifter.
  Optimizing cells in module \sm_to_u2.
  Optimizing cells in module \spi_exe_unit_1.
  Optimizing cells in module \watchdog.
Performed a total of 0 changes.

12.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\adder\LEN=4'.
Finding identical cells in module `$paramod\count_zeros\LEN=4'.
Finding identical cells in module `$paramod\crc_coder\WCODE=4\WPOLY=5'.
Finding identical cells in module `$paramod\crc_eval\WCODE=4\WPOLY=4'.
Finding identical cells in module `$paramod\exe_unit\N=4\M=4'.
Finding identical cells in module `$paramod\gray_koder2\LEN=4'.
Finding identical cells in module `$paramod\onehot2nkb_encoder\LEN=4'.
Finding identical cells in module `$paramod\shifter\N=20'.
Finding identical cells in module `$paramod\sm_to_u2\LEN=4'.
Finding identical cells in module `$paramod\watchdog\N=5'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\count_zeros'.
Finding identical cells in module `\crc_coder'.
Finding identical cells in module `\crc_eval'.
Finding identical cells in module `\exe_unit'.
Finding identical cells in module `\gray_koder2'.
Finding identical cells in module `\onehot2nkb_encoder'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\sm_to_u2'.
Finding identical cells in module `\spi_exe_unit_1'.
Finding identical cells in module `\watchdog'.
Removed a total of 0 cells.

12.13.6. Executing OPT_RMDFF pass (remove dff with constant values).

12.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\adder\LEN=4..
Finding unused cells or wires in module $paramod\count_zeros\LEN=4..
Finding unused cells or wires in module $paramod\crc_coder\WCODE=4\WPOLY=5..
Finding unused cells or wires in module $paramod\crc_eval\WCODE=4\WPOLY=4..
Finding unused cells or wires in module $paramod\exe_unit\N=4\M=4..
Finding unused cells or wires in module $paramod\gray_koder2\LEN=4..
Finding unused cells or wires in module $paramod\onehot2nkb_encoder\LEN=4..
Finding unused cells or wires in module $paramod\shifter\N=20..
Finding unused cells or wires in module $paramod\sm_to_u2\LEN=4..
Finding unused cells or wires in module $paramod\watchdog\N=5..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \count_zeros..
Finding unused cells or wires in module \crc_coder..
Finding unused cells or wires in module \crc_eval..
Finding unused cells or wires in module \exe_unit..
Finding unused cells or wires in module \gray_koder2..
Finding unused cells or wires in module \onehot2nkb_encoder..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \sm_to_u2..
Finding unused cells or wires in module \spi_exe_unit_1..
Finding unused cells or wires in module \watchdog..
Removed 2 unused cells and 6 unused wires.
<suppressed ~8 debug messages>

12.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\adder\LEN=4.
Optimizing module $paramod\count_zeros\LEN=4.
Optimizing module $paramod\crc_coder\WCODE=4\WPOLY=5.
Optimizing module $paramod\crc_eval\WCODE=4\WPOLY=4.
<suppressed ~1 debug messages>
Optimizing module $paramod\exe_unit\N=4\M=4.
Optimizing module $paramod\gray_koder2\LEN=4.
Optimizing module $paramod\onehot2nkb_encoder\LEN=4.
Optimizing module $paramod\shifter\N=20.
Optimizing module $paramod\sm_to_u2\LEN=4.
Optimizing module $paramod\watchdog\N=5.
Optimizing module adder.
Optimizing module count_zeros.
Optimizing module crc_coder.
Optimizing module crc_eval.
<suppressed ~1 debug messages>
Optimizing module exe_unit.
Optimizing module gray_koder2.
Optimizing module onehot2nkb_encoder.
Optimizing module shifter.
Optimizing module sm_to_u2.
Optimizing module spi_exe_unit_1.
Optimizing module watchdog.

12.13.9. Rerunning OPT passes. (Maybe there is more to do..)

12.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\adder\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\count_zeros\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc_coder\WCODE=4\WPOLY=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc_eval\WCODE=4\WPOLY=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\exe_unit\N=4\M=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\gray_koder2\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\onehot2nkb_encoder\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\shifter\N=20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\sm_to_u2\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\watchdog\N=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \count_zeros..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \crc_coder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \crc_eval..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exe_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gray_koder2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \onehot2nkb_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sm_to_u2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spi_exe_unit_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \watchdog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~82 debug messages>

12.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\adder\LEN=4.
  Optimizing cells in module $paramod\count_zeros\LEN=4.
  Optimizing cells in module $paramod\crc_coder\WCODE=4\WPOLY=5.
  Optimizing cells in module $paramod\crc_eval\WCODE=4\WPOLY=4.
  Optimizing cells in module $paramod\exe_unit\N=4\M=4.
  Optimizing cells in module $paramod\gray_koder2\LEN=4.
  Optimizing cells in module $paramod\onehot2nkb_encoder\LEN=4.
  Optimizing cells in module $paramod\shifter\N=20.
  Optimizing cells in module $paramod\sm_to_u2\LEN=4.
  Optimizing cells in module $paramod\watchdog\N=5.
  Optimizing cells in module \adder.
  Optimizing cells in module \count_zeros.
  Optimizing cells in module \crc_coder.
  Optimizing cells in module \crc_eval.
  Optimizing cells in module \exe_unit.
  Optimizing cells in module \gray_koder2.
  Optimizing cells in module \onehot2nkb_encoder.
  Optimizing cells in module \shifter.
  Optimizing cells in module \sm_to_u2.
  Optimizing cells in module \spi_exe_unit_1.
  Optimizing cells in module \watchdog.
Performed a total of 0 changes.

12.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\adder\LEN=4'.
Finding identical cells in module `$paramod\count_zeros\LEN=4'.
Finding identical cells in module `$paramod\crc_coder\WCODE=4\WPOLY=5'.
Finding identical cells in module `$paramod\crc_eval\WCODE=4\WPOLY=4'.
Finding identical cells in module `$paramod\exe_unit\N=4\M=4'.
Finding identical cells in module `$paramod\gray_koder2\LEN=4'.
Finding identical cells in module `$paramod\onehot2nkb_encoder\LEN=4'.
Finding identical cells in module `$paramod\shifter\N=20'.
Finding identical cells in module `$paramod\sm_to_u2\LEN=4'.
Finding identical cells in module `$paramod\watchdog\N=5'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\count_zeros'.
Finding identical cells in module `\crc_coder'.
Finding identical cells in module `\crc_eval'.
Finding identical cells in module `\exe_unit'.
Finding identical cells in module `\gray_koder2'.
Finding identical cells in module `\onehot2nkb_encoder'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\sm_to_u2'.
Finding identical cells in module `\spi_exe_unit_1'.
Finding identical cells in module `\watchdog'.
Removed a total of 0 cells.

12.13.13. Executing OPT_RMDFF pass (remove dff with constant values).

12.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\adder\LEN=4..
Finding unused cells or wires in module $paramod\count_zeros\LEN=4..
Finding unused cells or wires in module $paramod\crc_coder\WCODE=4\WPOLY=5..
Finding unused cells or wires in module $paramod\crc_eval\WCODE=4\WPOLY=4..
Finding unused cells or wires in module $paramod\exe_unit\N=4\M=4..
Finding unused cells or wires in module $paramod\gray_koder2\LEN=4..
Finding unused cells or wires in module $paramod\onehot2nkb_encoder\LEN=4..
Finding unused cells or wires in module $paramod\shifter\N=20..
Finding unused cells or wires in module $paramod\sm_to_u2\LEN=4..
Finding unused cells or wires in module $paramod\watchdog\N=5..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \count_zeros..
Finding unused cells or wires in module \crc_coder..
Finding unused cells or wires in module \crc_eval..
Finding unused cells or wires in module \exe_unit..
Finding unused cells or wires in module \gray_koder2..
Finding unused cells or wires in module \onehot2nkb_encoder..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \sm_to_u2..
Finding unused cells or wires in module \spi_exe_unit_1..
Finding unused cells or wires in module \watchdog..
Removed 0 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

12.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\adder\LEN=4.
Optimizing module $paramod\count_zeros\LEN=4.
Optimizing module $paramod\crc_coder\WCODE=4\WPOLY=5.
Optimizing module $paramod\crc_eval\WCODE=4\WPOLY=4.
Optimizing module $paramod\exe_unit\N=4\M=4.
Optimizing module $paramod\gray_koder2\LEN=4.
Optimizing module $paramod\onehot2nkb_encoder\LEN=4.
Optimizing module $paramod\shifter\N=20.
Optimizing module $paramod\sm_to_u2\LEN=4.
Optimizing module $paramod\watchdog\N=5.
Optimizing module adder.
Optimizing module count_zeros.
Optimizing module crc_coder.
Optimizing module crc_eval.
Optimizing module exe_unit.
Optimizing module gray_koder2.
Optimizing module onehot2nkb_encoder.
Optimizing module shifter.
Optimizing module sm_to_u2.
Optimizing module spi_exe_unit_1.
Optimizing module watchdog.

12.13.16. Finished OPT passes. (There is nothing left to do.)

12.14. Executing FSM pass (extract and optimize FSM).

12.14.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking spi_exe_unit_1.s_state as FSM state register:
    Circuit seems to be self-resetting.

12.14.2. Executing FSM_EXTRACT pass (extracting FSM from design).

12.14.3. Executing FSM_OPT pass (simple optimizations of FSMs).

12.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\adder\LEN=4..
Finding unused cells or wires in module $paramod\count_zeros\LEN=4..
Finding unused cells or wires in module $paramod\crc_coder\WCODE=4\WPOLY=5..
Finding unused cells or wires in module $paramod\crc_eval\WCODE=4\WPOLY=4..
Finding unused cells or wires in module $paramod\exe_unit\N=4\M=4..
Finding unused cells or wires in module $paramod\gray_koder2\LEN=4..
Finding unused cells or wires in module $paramod\onehot2nkb_encoder\LEN=4..
Finding unused cells or wires in module $paramod\shifter\N=20..
Finding unused cells or wires in module $paramod\sm_to_u2\LEN=4..
Finding unused cells or wires in module $paramod\watchdog\N=5..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \count_zeros..
Finding unused cells or wires in module \crc_coder..
Finding unused cells or wires in module \crc_eval..
Finding unused cells or wires in module \exe_unit..
Finding unused cells or wires in module \gray_koder2..
Finding unused cells or wires in module \onehot2nkb_encoder..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \sm_to_u2..
Finding unused cells or wires in module \spi_exe_unit_1..
Finding unused cells or wires in module \watchdog..

12.14.5. Executing FSM_OPT pass (simple optimizations of FSMs).

12.14.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

12.14.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

12.14.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

12.15. Executing OPT pass (performing simple optimizations).

12.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\adder\LEN=4.
Optimizing module $paramod\count_zeros\LEN=4.
Optimizing module $paramod\crc_coder\WCODE=4\WPOLY=5.
Optimizing module $paramod\crc_eval\WCODE=4\WPOLY=4.
Optimizing module $paramod\exe_unit\N=4\M=4.
Optimizing module $paramod\gray_koder2\LEN=4.
Optimizing module $paramod\onehot2nkb_encoder\LEN=4.
Optimizing module $paramod\shifter\N=20.
Optimizing module $paramod\sm_to_u2\LEN=4.
Optimizing module $paramod\watchdog\N=5.
Optimizing module adder.
Optimizing module count_zeros.
Optimizing module crc_coder.
Optimizing module crc_eval.
Optimizing module exe_unit.
Optimizing module gray_koder2.
Optimizing module onehot2nkb_encoder.
Optimizing module shifter.
Optimizing module sm_to_u2.
Optimizing module spi_exe_unit_1.
Optimizing module watchdog.

12.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\adder\LEN=4'.
Finding identical cells in module `$paramod\count_zeros\LEN=4'.
Finding identical cells in module `$paramod\crc_coder\WCODE=4\WPOLY=5'.
Finding identical cells in module `$paramod\crc_eval\WCODE=4\WPOLY=4'.
Finding identical cells in module `$paramod\exe_unit\N=4\M=4'.
Finding identical cells in module `$paramod\gray_koder2\LEN=4'.
Finding identical cells in module `$paramod\onehot2nkb_encoder\LEN=4'.
Finding identical cells in module `$paramod\shifter\N=20'.
Finding identical cells in module `$paramod\sm_to_u2\LEN=4'.
Finding identical cells in module `$paramod\watchdog\N=5'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\count_zeros'.
Finding identical cells in module `\crc_coder'.
Finding identical cells in module `\crc_eval'.
Finding identical cells in module `\exe_unit'.
Finding identical cells in module `\gray_koder2'.
Finding identical cells in module `\onehot2nkb_encoder'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\sm_to_u2'.
Finding identical cells in module `\spi_exe_unit_1'.
Finding identical cells in module `\watchdog'.
Removed a total of 0 cells.

12.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

12.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\adder\LEN=4..
Finding unused cells or wires in module $paramod\count_zeros\LEN=4..
Finding unused cells or wires in module $paramod\crc_coder\WCODE=4\WPOLY=5..
Finding unused cells or wires in module $paramod\crc_eval\WCODE=4\WPOLY=4..
Finding unused cells or wires in module $paramod\exe_unit\N=4\M=4..
Finding unused cells or wires in module $paramod\gray_koder2\LEN=4..
Finding unused cells or wires in module $paramod\onehot2nkb_encoder\LEN=4..
Finding unused cells or wires in module $paramod\shifter\N=20..
Finding unused cells or wires in module $paramod\sm_to_u2\LEN=4..
Finding unused cells or wires in module $paramod\watchdog\N=5..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \count_zeros..
Finding unused cells or wires in module \crc_coder..
Finding unused cells or wires in module \crc_eval..
Finding unused cells or wires in module \exe_unit..
Finding unused cells or wires in module \gray_koder2..
Finding unused cells or wires in module \onehot2nkb_encoder..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \sm_to_u2..
Finding unused cells or wires in module \spi_exe_unit_1..
Finding unused cells or wires in module \watchdog..

12.15.5. Finished fast OPT passes.

12.16. Executing MEMORY pass.

12.16.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

12.16.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\adder\LEN=4..
Finding unused cells or wires in module $paramod\count_zeros\LEN=4..
Finding unused cells or wires in module $paramod\crc_coder\WCODE=4\WPOLY=5..
Finding unused cells or wires in module $paramod\crc_eval\WCODE=4\WPOLY=4..
Finding unused cells or wires in module $paramod\exe_unit\N=4\M=4..
Finding unused cells or wires in module $paramod\gray_koder2\LEN=4..
Finding unused cells or wires in module $paramod\onehot2nkb_encoder\LEN=4..
Finding unused cells or wires in module $paramod\shifter\N=20..
Finding unused cells or wires in module $paramod\sm_to_u2\LEN=4..
Finding unused cells or wires in module $paramod\watchdog\N=5..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \count_zeros..
Finding unused cells or wires in module \crc_coder..
Finding unused cells or wires in module \crc_eval..
Finding unused cells or wires in module \exe_unit..
Finding unused cells or wires in module \gray_koder2..
Finding unused cells or wires in module \onehot2nkb_encoder..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \sm_to_u2..
Finding unused cells or wires in module \spi_exe_unit_1..
Finding unused cells or wires in module \watchdog..

12.16.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

12.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\adder\LEN=4..
Finding unused cells or wires in module $paramod\count_zeros\LEN=4..
Finding unused cells or wires in module $paramod\crc_coder\WCODE=4\WPOLY=5..
Finding unused cells or wires in module $paramod\crc_eval\WCODE=4\WPOLY=4..
Finding unused cells or wires in module $paramod\exe_unit\N=4\M=4..
Finding unused cells or wires in module $paramod\gray_koder2\LEN=4..
Finding unused cells or wires in module $paramod\onehot2nkb_encoder\LEN=4..
Finding unused cells or wires in module $paramod\shifter\N=20..
Finding unused cells or wires in module $paramod\sm_to_u2\LEN=4..
Finding unused cells or wires in module $paramod\watchdog\N=5..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \count_zeros..
Finding unused cells or wires in module \crc_coder..
Finding unused cells or wires in module \crc_eval..
Finding unused cells or wires in module \exe_unit..
Finding unused cells or wires in module \gray_koder2..
Finding unused cells or wires in module \onehot2nkb_encoder..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \sm_to_u2..
Finding unused cells or wires in module \spi_exe_unit_1..
Finding unused cells or wires in module \watchdog..

12.16.5. Executing MEMORY_COLLECT pass (generating $mem cells).

12.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\adder\LEN=4..
Finding unused cells or wires in module $paramod\count_zeros\LEN=4..
Finding unused cells or wires in module $paramod\crc_coder\WCODE=4\WPOLY=5..
Finding unused cells or wires in module $paramod\crc_eval\WCODE=4\WPOLY=4..
Finding unused cells or wires in module $paramod\exe_unit\N=4\M=4..
Finding unused cells or wires in module $paramod\gray_koder2\LEN=4..
Finding unused cells or wires in module $paramod\onehot2nkb_encoder\LEN=4..
Finding unused cells or wires in module $paramod\shifter\N=20..
Finding unused cells or wires in module $paramod\sm_to_u2\LEN=4..
Finding unused cells or wires in module $paramod\watchdog\N=5..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \count_zeros..
Finding unused cells or wires in module \crc_coder..
Finding unused cells or wires in module \crc_eval..
Finding unused cells or wires in module \exe_unit..
Finding unused cells or wires in module \gray_koder2..
Finding unused cells or wires in module \onehot2nkb_encoder..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \sm_to_u2..
Finding unused cells or wires in module \spi_exe_unit_1..
Finding unused cells or wires in module \watchdog..

12.18. Executing OPT pass (performing simple optimizations).

12.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\adder\LEN=4.
<suppressed ~2 debug messages>
Optimizing module $paramod\count_zeros\LEN=4.
<suppressed ~1 debug messages>
Optimizing module $paramod\crc_coder\WCODE=4\WPOLY=5.
<suppressed ~24 debug messages>
Optimizing module $paramod\crc_eval\WCODE=4\WPOLY=4.
<suppressed ~16 debug messages>
Optimizing module $paramod\exe_unit\N=4\M=4.
<suppressed ~10 debug messages>
Optimizing module $paramod\gray_koder2\LEN=4.
<suppressed ~8 debug messages>
Optimizing module $paramod\onehot2nkb_encoder\LEN=4.
<suppressed ~5 debug messages>
Optimizing module $paramod\shifter\N=20.
Optimizing module $paramod\sm_to_u2\LEN=4.
Optimizing module $paramod\watchdog\N=5.
<suppressed ~1 debug messages>
Optimizing module adder.
<suppressed ~2 debug messages>
Optimizing module count_zeros.
<suppressed ~1 debug messages>
Optimizing module crc_coder.
<suppressed ~24 debug messages>
Optimizing module crc_eval.
<suppressed ~16 debug messages>
Optimizing module exe_unit.
<suppressed ~10 debug messages>
Optimizing module gray_koder2.
<suppressed ~8 debug messages>
Optimizing module onehot2nkb_encoder.
<suppressed ~5 debug messages>
Optimizing module shifter.
Optimizing module sm_to_u2.
Optimizing module spi_exe_unit_1.
<suppressed ~4 debug messages>
Optimizing module watchdog.
<suppressed ~1 debug messages>

12.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\adder\LEN=4'.
Finding identical cells in module `$paramod\count_zeros\LEN=4'.
Finding identical cells in module `$paramod\crc_coder\WCODE=4\WPOLY=5'.
Finding identical cells in module `$paramod\crc_eval\WCODE=4\WPOLY=4'.
Finding identical cells in module `$paramod\exe_unit\N=4\M=4'.
Finding identical cells in module `$paramod\gray_koder2\LEN=4'.
Finding identical cells in module `$paramod\onehot2nkb_encoder\LEN=4'.
Finding identical cells in module `$paramod\shifter\N=20'.
Finding identical cells in module `$paramod\sm_to_u2\LEN=4'.
Finding identical cells in module `$paramod\watchdog\N=5'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\count_zeros'.
Finding identical cells in module `\crc_coder'.
Finding identical cells in module `\crc_eval'.
Finding identical cells in module `\exe_unit'.
Finding identical cells in module `\gray_koder2'.
Finding identical cells in module `\onehot2nkb_encoder'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\sm_to_u2'.
Finding identical cells in module `\spi_exe_unit_1'.
Finding identical cells in module `\watchdog'.
Removed a total of 0 cells.

12.18.3. Executing OPT_RMDFF pass (remove dff with constant values).

12.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\adder\LEN=4..
Finding unused cells or wires in module $paramod\count_zeros\LEN=4..
Finding unused cells or wires in module $paramod\crc_coder\WCODE=4\WPOLY=5..
Finding unused cells or wires in module $paramod\crc_eval\WCODE=4\WPOLY=4..
Finding unused cells or wires in module $paramod\exe_unit\N=4\M=4..
Finding unused cells or wires in module $paramod\gray_koder2\LEN=4..
Finding unused cells or wires in module $paramod\onehot2nkb_encoder\LEN=4..
Finding unused cells or wires in module $paramod\shifter\N=20..
Finding unused cells or wires in module $paramod\sm_to_u2\LEN=4..
Finding unused cells or wires in module $paramod\watchdog\N=5..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \count_zeros..
Finding unused cells or wires in module \crc_coder..
Finding unused cells or wires in module \crc_eval..
Finding unused cells or wires in module \exe_unit..
Finding unused cells or wires in module \gray_koder2..
Finding unused cells or wires in module \onehot2nkb_encoder..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \sm_to_u2..
Finding unused cells or wires in module \spi_exe_unit_1..
Finding unused cells or wires in module \watchdog..
Removed 0 unused cells and 46 unused wires.
<suppressed ~25 debug messages>

12.18.5. Finished fast OPT passes.

12.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

12.20. Executing OPT pass (performing simple optimizations).

12.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\adder\LEN=4.
Optimizing module $paramod\count_zeros\LEN=4.
Optimizing module $paramod\crc_coder\WCODE=4\WPOLY=5.
Optimizing module $paramod\crc_eval\WCODE=4\WPOLY=4.
Optimizing module $paramod\exe_unit\N=4\M=4.
<suppressed ~1 debug messages>
Optimizing module $paramod\gray_koder2\LEN=4.
Optimizing module $paramod\onehot2nkb_encoder\LEN=4.
Optimizing module $paramod\shifter\N=20.
Optimizing module $paramod\sm_to_u2\LEN=4.
Optimizing module $paramod\watchdog\N=5.
Optimizing module adder.
Optimizing module count_zeros.
Optimizing module crc_coder.
Optimizing module crc_eval.
Optimizing module exe_unit.
<suppressed ~1 debug messages>
Optimizing module gray_koder2.
Optimizing module onehot2nkb_encoder.
Optimizing module shifter.
Optimizing module sm_to_u2.
Optimizing module spi_exe_unit_1.
Optimizing module watchdog.

12.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\adder\LEN=4'.
Finding identical cells in module `$paramod\count_zeros\LEN=4'.
Finding identical cells in module `$paramod\crc_coder\WCODE=4\WPOLY=5'.
Finding identical cells in module `$paramod\crc_eval\WCODE=4\WPOLY=4'.
Finding identical cells in module `$paramod\exe_unit\N=4\M=4'.
Finding identical cells in module `$paramod\gray_koder2\LEN=4'.
Finding identical cells in module `$paramod\onehot2nkb_encoder\LEN=4'.
Finding identical cells in module `$paramod\shifter\N=20'.
Finding identical cells in module `$paramod\sm_to_u2\LEN=4'.
Finding identical cells in module `$paramod\watchdog\N=5'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\count_zeros'.
Finding identical cells in module `\crc_coder'.
Finding identical cells in module `\crc_eval'.
Finding identical cells in module `\exe_unit'.
Finding identical cells in module `\gray_koder2'.
Finding identical cells in module `\onehot2nkb_encoder'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\sm_to_u2'.
Finding identical cells in module `\spi_exe_unit_1'.
Finding identical cells in module `\watchdog'.
Removed a total of 0 cells.

12.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\adder\LEN=4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\count_zeros\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc_coder\WCODE=4\WPOLY=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc_eval\WCODE=4\WPOLY=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\exe_unit\N=4\M=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\gray_koder2\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$424: { \i_data [3] $auto$opt_expr.cc:189:group_cell_inputs$995 } -> { 1'0 $auto$opt_expr.cc:189:group_cell_inputs$995 }
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\onehot2nkb_encoder\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\shifter\N=20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\sm_to_u2\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\watchdog\N=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \count_zeros..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \crc_coder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \crc_eval..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exe_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gray_koder2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$710: { \i_data [3] $auto$opt_expr.cc:189:group_cell_inputs$1022 } -> { 1'0 $auto$opt_expr.cc:189:group_cell_inputs$1022 }
  Analyzing evaluation results.
Running muxtree optimizer on module \onehot2nkb_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sm_to_u2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spi_exe_unit_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \watchdog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~61 debug messages>

12.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\adder\LEN=4.
  Optimizing cells in module $paramod\count_zeros\LEN=4.
  Optimizing cells in module $paramod\crc_coder\WCODE=4\WPOLY=5.
    Consolidated identical input bits for $mux cell $procmux$454:
      Old ports: A=$2\crc_tmp[7:0], B={ $auto$opt_expr.cc:189:group_cell_inputs$980 $2\crc_tmp[7:0] [0] }, Y=$3\crc_tmp[7:0]
      New ports: A=$2\crc_tmp[7:0] [3:1], B=$auto$opt_expr.cc:189:group_cell_inputs$980, Y=$3\crc_tmp[7:0] [3:1]
      New connections: $3\crc_tmp[7:0] [0] = $2\crc_tmp[7:0] [0]
    Consolidated identical input bits for $mux cell $procmux$457:
      Old ports: A=$1\crc_tmp[7:0], B={ $auto$opt_expr.cc:189:group_cell_inputs$976 $1\crc_tmp[7:0] [1:0] }, Y=$2\crc_tmp[7:0]
      New ports: A=$1\crc_tmp[7:0] [3:2], B=$auto$opt_expr.cc:189:group_cell_inputs$976, Y=$2\crc_tmp[7:0] [3:2]
      New connections: $2\crc_tmp[7:0] [1:0] = $1\crc_tmp[7:0] [1:0]
    Consolidated identical input bits for $mux cell $procmux$460:
      Old ports: A=\i_crc, B={ $auto$opt_expr.cc:189:group_cell_inputs$972 \i_crc [2:0] }, Y=$1\crc_tmp[7:0]
      New ports: A=\i_crc [3], B=$auto$opt_expr.cc:189:group_cell_inputs$972, Y=$1\crc_tmp[7:0] [3]
      New connections: $1\crc_tmp[7:0] [2:0] = \i_crc [2:0]
  Optimizing cells in module $paramod\crc_coder\WCODE=4\WPOLY=5.
  Optimizing cells in module $paramod\crc_eval\WCODE=4\WPOLY=4.
    Consolidated identical input bits for $mux cell $procmux$466:
      Old ports: A=$2\crc_tmp[6:0], B={ $auto$opt_expr.cc:189:group_cell_inputs$988 $2\crc_tmp[6:0] [0] }, Y=$3\crc_tmp[6:0] [2:0]
      New ports: A=$2\crc_tmp[6:0] [2:1], B=$auto$opt_expr.cc:189:group_cell_inputs$988, Y=$3\crc_tmp[6:0] [2:1]
      New connections: $3\crc_tmp[6:0] [0] = $2\crc_tmp[6:0] [0]
    Consolidated identical input bits for $mux cell $procmux$469:
      Old ports: A=\i_crc, B={ $auto$opt_expr.cc:189:group_cell_inputs$984 \i_crc [1:0] }, Y=$2\crc_tmp[6:0]
      New ports: A=\i_crc [2], B=$auto$opt_expr.cc:189:group_cell_inputs$984, Y=$2\crc_tmp[6:0] [2]
      New connections: $2\crc_tmp[6:0] [1:0] = \i_crc [1:0]
  Optimizing cells in module $paramod\crc_eval\WCODE=4\WPOLY=4.
  Optimizing cells in module $paramod\exe_unit\N=4\M=4.
  Optimizing cells in module $paramod\gray_koder2\LEN=4.
  Optimizing cells in module $paramod\onehot2nkb_encoder\LEN=4.
    Consolidated identical input bits for $mux cell $procmux$395:
      Old ports: A=2'01, B=2'11, Y=$4\o_nkb[1:0]
      New ports: A=1'0, B=1'1, Y=$4\o_nkb[1:0] [1]
      New connections: $4\o_nkb[1:0] [0] = 1'1
  Optimizing cells in module $paramod\onehot2nkb_encoder\LEN=4.
  Optimizing cells in module $paramod\shifter\N=20.
  Optimizing cells in module $paramod\sm_to_u2\LEN=4.
  Optimizing cells in module $paramod\watchdog\N=5.
  Optimizing cells in module \adder.
  Optimizing cells in module \count_zeros.
  Optimizing cells in module \crc_coder.
    Consolidated identical input bits for $mux cell $procmux$770:
      Old ports: A=$2\crc_tmp[7:0], B={ $auto$opt_expr.cc:189:group_cell_inputs$1007 $2\crc_tmp[7:0] [0] }, Y=$3\crc_tmp[7:0]
      New ports: A=$2\crc_tmp[7:0] [3:1], B=$auto$opt_expr.cc:189:group_cell_inputs$1007, Y=$3\crc_tmp[7:0] [3:1]
      New connections: $3\crc_tmp[7:0] [0] = $2\crc_tmp[7:0] [0]
    Consolidated identical input bits for $mux cell $procmux$773:
      Old ports: A=$1\crc_tmp[7:0], B={ $auto$opt_expr.cc:189:group_cell_inputs$1003 $1\crc_tmp[7:0] [1:0] }, Y=$2\crc_tmp[7:0]
      New ports: A=$1\crc_tmp[7:0] [3:2], B=$auto$opt_expr.cc:189:group_cell_inputs$1003, Y=$2\crc_tmp[7:0] [3:2]
      New connections: $2\crc_tmp[7:0] [1:0] = $1\crc_tmp[7:0] [1:0]
    Consolidated identical input bits for $mux cell $procmux$776:
      Old ports: A=\i_crc, B={ $auto$opt_expr.cc:189:group_cell_inputs$999 \i_crc [2:0] }, Y=$1\crc_tmp[7:0]
      New ports: A=\i_crc [3], B=$auto$opt_expr.cc:189:group_cell_inputs$999, Y=$1\crc_tmp[7:0] [3]
      New connections: $1\crc_tmp[7:0] [2:0] = \i_crc [2:0]
  Optimizing cells in module \crc_coder.
  Optimizing cells in module \crc_eval.
    Consolidated identical input bits for $mux cell $procmux$782:
      Old ports: A=$2\crc_tmp[6:0], B={ $auto$opt_expr.cc:189:group_cell_inputs$1015 $2\crc_tmp[6:0] [0] }, Y=$3\crc_tmp[6:0]
      New ports: A=$2\crc_tmp[6:0] [2:1], B=$auto$opt_expr.cc:189:group_cell_inputs$1015, Y=$3\crc_tmp[6:0] [2:1]
      New connections: $3\crc_tmp[6:0] [0] = $2\crc_tmp[6:0] [0]
    Consolidated identical input bits for $mux cell $procmux$785:
      Old ports: A=\i_crc, B={ $auto$opt_expr.cc:189:group_cell_inputs$1011 \i_crc [1:0] }, Y=$2\crc_tmp[6:0]
      New ports: A=\i_crc [2], B=$auto$opt_expr.cc:189:group_cell_inputs$1011, Y=$2\crc_tmp[6:0] [2]
      New connections: $2\crc_tmp[6:0] [1:0] = \i_crc [1:0]
  Optimizing cells in module \crc_eval.
  Optimizing cells in module \exe_unit.
  Optimizing cells in module \gray_koder2.
  Optimizing cells in module \onehot2nkb_encoder.
    Consolidated identical input bits for $mux cell $procmux$681:
      Old ports: A=2'01, B=2'11, Y=$4\o_nkb[1:0]
      New ports: A=1'0, B=1'1, Y=$4\o_nkb[1:0] [1]
      New connections: $4\o_nkb[1:0] [0] = 1'1
  Optimizing cells in module \onehot2nkb_encoder.
  Optimizing cells in module \shifter.
  Optimizing cells in module \sm_to_u2.
  Optimizing cells in module \spi_exe_unit_1.
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$838: { \s_wrt $procmux$523_CMP }
  Optimizing cells in module \spi_exe_unit_1.
  Optimizing cells in module \watchdog.
Performed a total of 13 changes.

12.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\adder\LEN=4'.
Finding identical cells in module `$paramod\count_zeros\LEN=4'.
Finding identical cells in module `$paramod\crc_coder\WCODE=4\WPOLY=5'.
Finding identical cells in module `$paramod\crc_eval\WCODE=4\WPOLY=4'.
Finding identical cells in module `$paramod\exe_unit\N=4\M=4'.
Finding identical cells in module `$paramod\gray_koder2\LEN=4'.
Finding identical cells in module `$paramod\onehot2nkb_encoder\LEN=4'.
Finding identical cells in module `$paramod\shifter\N=20'.
Finding identical cells in module `$paramod\sm_to_u2\LEN=4'.
Finding identical cells in module `$paramod\watchdog\N=5'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\count_zeros'.
Finding identical cells in module `\crc_coder'.
Finding identical cells in module `\crc_eval'.
Finding identical cells in module `\exe_unit'.
Finding identical cells in module `\gray_koder2'.
Finding identical cells in module `\onehot2nkb_encoder'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\sm_to_u2'.
Finding identical cells in module `\spi_exe_unit_1'.
Finding identical cells in module `\watchdog'.
Removed a total of 0 cells.

12.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

12.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\adder\LEN=4..
Finding unused cells or wires in module $paramod\count_zeros\LEN=4..
Finding unused cells or wires in module $paramod\crc_coder\WCODE=4\WPOLY=5..
Finding unused cells or wires in module $paramod\crc_eval\WCODE=4\WPOLY=4..
Finding unused cells or wires in module $paramod\exe_unit\N=4\M=4..
Finding unused cells or wires in module $paramod\gray_koder2\LEN=4..
Finding unused cells or wires in module $paramod\onehot2nkb_encoder\LEN=4..
Finding unused cells or wires in module $paramod\shifter\N=20..
Finding unused cells or wires in module $paramod\sm_to_u2\LEN=4..
Finding unused cells or wires in module $paramod\watchdog\N=5..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \count_zeros..
Finding unused cells or wires in module \crc_coder..
Finding unused cells or wires in module \crc_eval..
Finding unused cells or wires in module \exe_unit..
Finding unused cells or wires in module \gray_koder2..
Finding unused cells or wires in module \onehot2nkb_encoder..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \sm_to_u2..
Finding unused cells or wires in module \spi_exe_unit_1..
Finding unused cells or wires in module \watchdog..

12.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\adder\LEN=4.
Optimizing module $paramod\count_zeros\LEN=4.
Optimizing module $paramod\crc_coder\WCODE=4\WPOLY=5.
Optimizing module $paramod\crc_eval\WCODE=4\WPOLY=4.
Optimizing module $paramod\exe_unit\N=4\M=4.
Optimizing module $paramod\gray_koder2\LEN=4.
Optimizing module $paramod\onehot2nkb_encoder\LEN=4.
<suppressed ~1 debug messages>
Optimizing module $paramod\shifter\N=20.
Optimizing module $paramod\sm_to_u2\LEN=4.
Optimizing module $paramod\watchdog\N=5.
Optimizing module adder.
Optimizing module count_zeros.
Optimizing module crc_coder.
Optimizing module crc_eval.
Optimizing module exe_unit.
Optimizing module gray_koder2.
Optimizing module onehot2nkb_encoder.
<suppressed ~1 debug messages>
Optimizing module shifter.
Optimizing module sm_to_u2.
Optimizing module spi_exe_unit_1.
Optimizing module watchdog.

12.20.9. Rerunning OPT passes. (Maybe there is more to do..)

12.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\adder\LEN=4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\count_zeros\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc_coder\WCODE=4\WPOLY=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\crc_eval\WCODE=4\WPOLY=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\exe_unit\N=4\M=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\gray_koder2\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\onehot2nkb_encoder\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\shifter\N=20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\sm_to_u2\LEN=4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\watchdog\N=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \count_zeros..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \crc_coder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \crc_eval..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exe_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \gray_koder2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \onehot2nkb_encoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sm_to_u2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spi_exe_unit_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \watchdog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~61 debug messages>

12.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\adder\LEN=4.
  Optimizing cells in module $paramod\count_zeros\LEN=4.
  Optimizing cells in module $paramod\crc_coder\WCODE=4\WPOLY=5.
  Optimizing cells in module $paramod\crc_eval\WCODE=4\WPOLY=4.
  Optimizing cells in module $paramod\exe_unit\N=4\M=4.
  Optimizing cells in module $paramod\gray_koder2\LEN=4.
  Optimizing cells in module $paramod\onehot2nkb_encoder\LEN=4.
  Optimizing cells in module $paramod\shifter\N=20.
  Optimizing cells in module $paramod\sm_to_u2\LEN=4.
  Optimizing cells in module $paramod\watchdog\N=5.
  Optimizing cells in module \adder.
  Optimizing cells in module \count_zeros.
  Optimizing cells in module \crc_coder.
  Optimizing cells in module \crc_eval.
  Optimizing cells in module \exe_unit.
  Optimizing cells in module \gray_koder2.
  Optimizing cells in module \onehot2nkb_encoder.
  Optimizing cells in module \shifter.
  Optimizing cells in module \sm_to_u2.
  Optimizing cells in module \spi_exe_unit_1.
  Optimizing cells in module \watchdog.
Performed a total of 0 changes.

12.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\adder\LEN=4'.
Finding identical cells in module `$paramod\count_zeros\LEN=4'.
Finding identical cells in module `$paramod\crc_coder\WCODE=4\WPOLY=5'.
Finding identical cells in module `$paramod\crc_eval\WCODE=4\WPOLY=4'.
Finding identical cells in module `$paramod\exe_unit\N=4\M=4'.
Finding identical cells in module `$paramod\gray_koder2\LEN=4'.
Finding identical cells in module `$paramod\onehot2nkb_encoder\LEN=4'.
Finding identical cells in module `$paramod\shifter\N=20'.
Finding identical cells in module `$paramod\sm_to_u2\LEN=4'.
Finding identical cells in module `$paramod\watchdog\N=5'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\count_zeros'.
Finding identical cells in module `\crc_coder'.
Finding identical cells in module `\crc_eval'.
Finding identical cells in module `\exe_unit'.
Finding identical cells in module `\gray_koder2'.
Finding identical cells in module `\onehot2nkb_encoder'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\sm_to_u2'.
Finding identical cells in module `\spi_exe_unit_1'.
Finding identical cells in module `\watchdog'.
Removed a total of 0 cells.

12.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

12.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\adder\LEN=4..
Finding unused cells or wires in module $paramod\count_zeros\LEN=4..
Finding unused cells or wires in module $paramod\crc_coder\WCODE=4\WPOLY=5..
Finding unused cells or wires in module $paramod\crc_eval\WCODE=4\WPOLY=4..
Finding unused cells or wires in module $paramod\exe_unit\N=4\M=4..
Finding unused cells or wires in module $paramod\gray_koder2\LEN=4..
Finding unused cells or wires in module $paramod\onehot2nkb_encoder\LEN=4..
Finding unused cells or wires in module $paramod\shifter\N=20..
Finding unused cells or wires in module $paramod\sm_to_u2\LEN=4..
Finding unused cells or wires in module $paramod\watchdog\N=5..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \count_zeros..
Finding unused cells or wires in module \crc_coder..
Finding unused cells or wires in module \crc_eval..
Finding unused cells or wires in module \exe_unit..
Finding unused cells or wires in module \gray_koder2..
Finding unused cells or wires in module \onehot2nkb_encoder..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \sm_to_u2..
Finding unused cells or wires in module \spi_exe_unit_1..
Finding unused cells or wires in module \watchdog..
Removed 0 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

12.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\adder\LEN=4.
Optimizing module $paramod\count_zeros\LEN=4.
Optimizing module $paramod\crc_coder\WCODE=4\WPOLY=5.
Optimizing module $paramod\crc_eval\WCODE=4\WPOLY=4.
Optimizing module $paramod\exe_unit\N=4\M=4.
Optimizing module $paramod\gray_koder2\LEN=4.
Optimizing module $paramod\onehot2nkb_encoder\LEN=4.
Optimizing module $paramod\shifter\N=20.
Optimizing module $paramod\sm_to_u2\LEN=4.
Optimizing module $paramod\watchdog\N=5.
Optimizing module adder.
Optimizing module count_zeros.
Optimizing module crc_coder.
Optimizing module crc_eval.
Optimizing module exe_unit.
Optimizing module gray_koder2.
Optimizing module onehot2nkb_encoder.
Optimizing module shifter.
Optimizing module sm_to_u2.
Optimizing module spi_exe_unit_1.
Optimizing module watchdog.

12.20.16. Finished OPT passes. (There is nothing left to do.)

12.21. Executing TECHMAP pass (map to technology primitives).

12.21.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

12.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $ne.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod$constmap:caa849dc115b22349251b6d1fd2e89817490b7c3$paramod$77e292c93a27c274b619a80de84bef751a27cfdb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:caa849dc115b22349251b6d1fd2e89817490b7c3$paramod$5a626f7c533aded17c5edc17de03eef4766a7705\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=11 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_90_lcu\WIDTH=32 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
Using extmapper simplemap for cells of type $adff.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=12\B_WIDTH=1\Y_WIDTH=12 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=12 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=1\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=5 for cells of type $lcu.
No more expansions possible.
<suppressed ~2648 debug messages>

12.22. Executing OPT pass (performing simple optimizations).

12.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\adder\LEN=4.
<suppressed ~8 debug messages>
Optimizing module $paramod\count_zeros\LEN=4.
<suppressed ~165 debug messages>
Optimizing module $paramod\crc_coder\WCODE=4\WPOLY=5.
Optimizing module $paramod\crc_eval\WCODE=4\WPOLY=4.
Optimizing module $paramod\exe_unit\N=4\M=4.
<suppressed ~1066 debug messages>
Optimizing module $paramod\gray_koder2\LEN=4.
<suppressed ~1 debug messages>
Optimizing module $paramod\onehot2nkb_encoder\LEN=4.
<suppressed ~1 debug messages>
Optimizing module $paramod\shifter\N=20.
Optimizing module $paramod\sm_to_u2\LEN=4.
<suppressed ~18 debug messages>
Optimizing module $paramod\watchdog\N=5.
<suppressed ~44 debug messages>
Optimizing module adder.
<suppressed ~8 debug messages>
Optimizing module count_zeros.
<suppressed ~165 debug messages>
Optimizing module crc_coder.
Optimizing module crc_eval.
Optimizing module exe_unit.
<suppressed ~1066 debug messages>
Optimizing module gray_koder2.
<suppressed ~1 debug messages>
Optimizing module onehot2nkb_encoder.
<suppressed ~1 debug messages>
Optimizing module shifter.
Optimizing module sm_to_u2.
<suppressed ~18 debug messages>
Optimizing module spi_exe_unit_1.
<suppressed ~55 debug messages>
Optimizing module watchdog.
<suppressed ~105 debug messages>

12.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\adder\LEN=4'.
<suppressed ~3 debug messages>
Finding identical cells in module `$paramod\count_zeros\LEN=4'.
Finding identical cells in module `$paramod\crc_coder\WCODE=4\WPOLY=5'.
Finding identical cells in module `$paramod\crc_eval\WCODE=4\WPOLY=4'.
Finding identical cells in module `$paramod\exe_unit\N=4\M=4'.
<suppressed ~102 debug messages>
Finding identical cells in module `$paramod\gray_koder2\LEN=4'.
Finding identical cells in module `$paramod\onehot2nkb_encoder\LEN=4'.
Finding identical cells in module `$paramod\shifter\N=20'.
Finding identical cells in module `$paramod\sm_to_u2\LEN=4'.
Finding identical cells in module `$paramod\watchdog\N=5'.
Finding identical cells in module `\adder'.
<suppressed ~3 debug messages>
Finding identical cells in module `\count_zeros'.
Finding identical cells in module `\crc_coder'.
Finding identical cells in module `\crc_eval'.
Finding identical cells in module `\exe_unit'.
<suppressed ~102 debug messages>
Finding identical cells in module `\gray_koder2'.
Finding identical cells in module `\onehot2nkb_encoder'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\sm_to_u2'.
Finding identical cells in module `\spi_exe_unit_1'.
<suppressed ~24 debug messages>
Finding identical cells in module `\watchdog'.
Removed a total of 78 cells.

12.22.3. Executing OPT_RMDFF pass (remove dff with constant values).

12.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\adder\LEN=4..
Finding unused cells or wires in module $paramod\count_zeros\LEN=4..
Finding unused cells or wires in module $paramod\crc_coder\WCODE=4\WPOLY=5..
Finding unused cells or wires in module $paramod\crc_eval\WCODE=4\WPOLY=4..
Finding unused cells or wires in module $paramod\exe_unit\N=4\M=4..
Finding unused cells or wires in module $paramod\gray_koder2\LEN=4..
Finding unused cells or wires in module $paramod\onehot2nkb_encoder\LEN=4..
Finding unused cells or wires in module $paramod\shifter\N=20..
Finding unused cells or wires in module $paramod\sm_to_u2\LEN=4..
Finding unused cells or wires in module $paramod\watchdog\N=5..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \count_zeros..
Finding unused cells or wires in module \crc_coder..
Finding unused cells or wires in module \crc_eval..
Finding unused cells or wires in module \exe_unit..
Finding unused cells or wires in module \gray_koder2..
Finding unused cells or wires in module \onehot2nkb_encoder..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \sm_to_u2..
Finding unused cells or wires in module \spi_exe_unit_1..
Finding unused cells or wires in module \watchdog..
Removed 129 unused cells and 1809 unused wires.
<suppressed ~140 debug messages>

12.22.5. Finished fast OPT passes.

12.23. Executing ABC pass (technology mapping using ABC).

12.23.1. Extracting gate netlist of module `$paramod\adder\LEN=4' to `<abc-temp-dir>/input.blif'..
Extracted 17 gates and 25 wires to a netlist network with 8 inputs and 5 outputs.

12.23.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:              OAI3 cells:        1
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:        5
ABC RESULTS:        internal signals:       12
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        5
Removing temp directory.

12.23.2. Extracting gate netlist of module `$paramod\count_zeros\LEN=4' to `<abc-temp-dir>/input.blif'..
Extracted 59 gates and 69 wires to a netlist network with 8 inputs and 4 outputs.

12.23.2.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:               MUX cells:       14
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:              OAI3 cells:        1
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:       13
ABC RESULTS:               XOR cells:        7
ABC RESULTS:        internal signals:       57
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

12.23.3. Extracting gate netlist of module `$paramod\crc_coder\WCODE=4\WPOLY=5' to `<abc-temp-dir>/input.blif'..
Extracted 20 gates and 32 wires to a netlist network with 12 inputs and 4 outputs.

12.23.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.3.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        8
ABC RESULTS:               NOT cells:        7
ABC RESULTS:              OAI3 cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:        6
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        4
Removing temp directory.

12.23.4. Extracting gate netlist of module `$paramod\crc_eval\WCODE=4\WPOLY=4' to `<abc-temp-dir>/input.blif'..
Extracted 12 gates and 21 wires to a netlist network with 9 inputs and 3 outputs.

12.23.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.4.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               NOT cells:        3
ABC RESULTS:              OAI3 cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        5
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        3
Removing temp directory.

12.23.5. Extracting gate netlist of module `$paramod\exe_unit\N=4\M=4' to `<abc-temp-dir>/input.blif'..
Extracted 206 gates and 248 wires to a netlist network with 40 inputs and 8 outputs.

12.23.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:              AOI4 cells:        8
ABC RESULTS:               MUX cells:       12
ABC RESULTS:              NAND cells:        8
ABC RESULTS:               NOR cells:       11
ABC RESULTS:               NOT cells:       18
ABC RESULTS:              OAI4 cells:       12
ABC RESULTS:                OR cells:       40
ABC RESULTS:             ORNOT cells:       18
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:      200
ABC RESULTS:           input signals:       40
ABC RESULTS:          output signals:        8
Removing temp directory.

12.23.6. Extracting gate netlist of module `$paramod\gray_koder2\LEN=4' to `<abc-temp-dir>/input.blif'..
Extracted 6 gates and 11 wires to a netlist network with 4 inputs and 3 outputs.

12.23.6.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.6.2. Re-integrating ABC results.
ABC RESULTS:                OR cells:        3
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        3
Removing temp directory.

12.23.7. Extracting gate netlist of module `$paramod\onehot2nkb_encoder\LEN=4' to `<abc-temp-dir>/input.blif'..
Extracted 10 gates and 16 wires to a netlist network with 4 inputs and 2 outputs.

12.23.7.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.7.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:              AOI3 cells:        2
ABC RESULTS:              OAI3 cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        2
Removing temp directory.

12.23.8. Extracting gate netlist of module `$paramod\shifter\N=20' to `<abc-temp-dir>/input.blif'..
Extracted 40 gates and 83 wires to a netlist network with 43 inputs and 20 outputs.

12.23.8.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.8.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:       40
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:       20
ABC RESULTS:           input signals:       43
ABC RESULTS:          output signals:       20
Removing temp directory.

12.23.9. Extracting gate netlist of module `$paramod\sm_to_u2\LEN=4' to `<abc-temp-dir>/input.blif'..
Extracted 10 gates and 15 wires to a netlist network with 4 inputs and 3 outputs.

12.23.9.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.9.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        3
Removing temp directory.

12.23.10. Extracting gate netlist of module `$paramod\watchdog\N=5' to `<abc-temp-dir>/input.blif'..
Extracted 48 gates and 66 wires to a netlist network with 16 inputs and 11 outputs.

12.23.10.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.10.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:               MUX cells:       15
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        3
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:       39
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       11
Removing temp directory.

12.23.11. Extracting gate netlist of module `\adder' to `<abc-temp-dir>/input.blif'..
Extracted 17 gates and 25 wires to a netlist network with 8 inputs and 5 outputs.

12.23.11.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.11.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:              OAI3 cells:        1
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:        5
ABC RESULTS:        internal signals:       12
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        5
Removing temp directory.

12.23.12. Extracting gate netlist of module `\count_zeros' to `<abc-temp-dir>/input.blif'..
Extracted 59 gates and 69 wires to a netlist network with 8 inputs and 4 outputs.

12.23.12.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.12.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:               MUX cells:       14
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:              OAI3 cells:        1
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:       13
ABC RESULTS:               XOR cells:        7
ABC RESULTS:        internal signals:       57
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

12.23.13. Extracting gate netlist of module `\crc_coder' to `<abc-temp-dir>/input.blif'..
Extracted 20 gates and 32 wires to a netlist network with 12 inputs and 4 outputs.

12.23.13.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.13.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        8
ABC RESULTS:               NOT cells:        7
ABC RESULTS:              OAI3 cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:        6
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        4
Removing temp directory.

12.23.14. Extracting gate netlist of module `\crc_eval' to `<abc-temp-dir>/input.blif'..
Extracted 12 gates and 21 wires to a netlist network with 9 inputs and 3 outputs.

12.23.14.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.14.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        5
ABC RESULTS:               NOT cells:        3
ABC RESULTS:              OAI3 cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        5
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        3
Removing temp directory.

12.23.15. Extracting gate netlist of module `\exe_unit' to `<abc-temp-dir>/input.blif'..
Extracted 206 gates and 248 wires to a netlist network with 40 inputs and 8 outputs.

12.23.15.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.15.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:              AOI4 cells:        8
ABC RESULTS:               MUX cells:       12
ABC RESULTS:              NAND cells:        8
ABC RESULTS:               NOR cells:       11
ABC RESULTS:               NOT cells:       18
ABC RESULTS:              OAI4 cells:       12
ABC RESULTS:                OR cells:       40
ABC RESULTS:             ORNOT cells:       18
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:      200
ABC RESULTS:           input signals:       40
ABC RESULTS:          output signals:        8
Removing temp directory.

12.23.16. Extracting gate netlist of module `\gray_koder2' to `<abc-temp-dir>/input.blif'..
Extracted 6 gates and 11 wires to a netlist network with 4 inputs and 3 outputs.

12.23.16.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.16.2. Re-integrating ABC results.
ABC RESULTS:                OR cells:        3
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        3
Removing temp directory.

12.23.17. Extracting gate netlist of module `\onehot2nkb_encoder' to `<abc-temp-dir>/input.blif'..
Extracted 10 gates and 16 wires to a netlist network with 4 inputs and 2 outputs.

12.23.17.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.17.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        2
ABC RESULTS:              AOI3 cells:        2
ABC RESULTS:              OAI3 cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        2
Removing temp directory.

12.23.18. Extracting gate netlist of module `\shifter' to `<abc-temp-dir>/input.blif'..
Extracted 40 gates and 83 wires to a netlist network with 43 inputs and 20 outputs.

12.23.18.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.18.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:       40
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:       20
ABC RESULTS:           input signals:       43
ABC RESULTS:          output signals:       20
Removing temp directory.

12.23.19. Extracting gate netlist of module `\sm_to_u2' to `<abc-temp-dir>/input.blif'..
Extracted 10 gates and 15 wires to a netlist network with 4 inputs and 3 outputs.

12.23.19.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.19.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               MUX cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        3
Removing temp directory.

12.23.20. Extracting gate netlist of module `\spi_exe_unit_1' to `<abc-temp-dir>/input.blif'..
Extracted 120 gates and 179 wires to a netlist network with 57 inputs and 48 outputs.

12.23.20.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.20.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:       30
ABC RESULTS:              AOI3 cells:        3
ABC RESULTS:              AOI4 cells:        3
ABC RESULTS:               MUX cells:       20
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:       23
ABC RESULTS:              OAI3 cells:        4
ABC RESULTS:              OAI4 cells:       10
ABC RESULTS:                OR cells:        4
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:        internal signals:       74
ABC RESULTS:           input signals:       57
ABC RESULTS:          output signals:       48
Removing temp directory.

12.23.21. Extracting gate netlist of module `\watchdog' to `<abc-temp-dir>/input.blif'..
Extracted 130 gates and 169 wires to a netlist network with 37 inputs and 25 outputs.

12.23.21.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

12.23.21.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       11
ABC RESULTS:              AOI3 cells:        2
ABC RESULTS:               MUX cells:       36
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:       10
ABC RESULTS:               NOT cells:        4
ABC RESULTS:              OAI3 cells:        3
ABC RESULTS:                OR cells:       12
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       10
ABC RESULTS:        internal signals:      107
ABC RESULTS:           input signals:       37
ABC RESULTS:          output signals:       25
Removing temp directory.

12.24. Executing OPT pass (performing simple optimizations).

12.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\adder\LEN=4.
Optimizing module $paramod\count_zeros\LEN=4.
Optimizing module $paramod\crc_coder\WCODE=4\WPOLY=5.
<suppressed ~7 debug messages>
Optimizing module $paramod\crc_eval\WCODE=4\WPOLY=4.
<suppressed ~4 debug messages>
Optimizing module $paramod\exe_unit\N=4\M=4.
<suppressed ~5 debug messages>
Optimizing module $paramod\gray_koder2\LEN=4.
Optimizing module $paramod\onehot2nkb_encoder\LEN=4.
Optimizing module $paramod\shifter\N=20.
<suppressed ~20 debug messages>
Optimizing module $paramod\sm_to_u2\LEN=4.
<suppressed ~2 debug messages>
Optimizing module $paramod\watchdog\N=5.
Optimizing module adder.
Optimizing module count_zeros.
Optimizing module crc_coder.
<suppressed ~7 debug messages>
Optimizing module crc_eval.
<suppressed ~4 debug messages>
Optimizing module exe_unit.
<suppressed ~5 debug messages>
Optimizing module gray_koder2.
Optimizing module onehot2nkb_encoder.
Optimizing module shifter.
<suppressed ~20 debug messages>
Optimizing module sm_to_u2.
<suppressed ~2 debug messages>
Optimizing module spi_exe_unit_1.
Optimizing module watchdog.

12.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\adder\LEN=4'.
Finding identical cells in module `$paramod\count_zeros\LEN=4'.
Finding identical cells in module `$paramod\crc_coder\WCODE=4\WPOLY=5'.
Finding identical cells in module `$paramod\crc_eval\WCODE=4\WPOLY=4'.
Finding identical cells in module `$paramod\exe_unit\N=4\M=4'.
Finding identical cells in module `$paramod\gray_koder2\LEN=4'.
Finding identical cells in module `$paramod\onehot2nkb_encoder\LEN=4'.
Finding identical cells in module `$paramod\shifter\N=20'.
Finding identical cells in module `$paramod\sm_to_u2\LEN=4'.
Finding identical cells in module `$paramod\watchdog\N=5'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\count_zeros'.
Finding identical cells in module `\crc_coder'.
Finding identical cells in module `\crc_eval'.
Finding identical cells in module `\exe_unit'.
Finding identical cells in module `\gray_koder2'.
Finding identical cells in module `\onehot2nkb_encoder'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\sm_to_u2'.
Finding identical cells in module `\spi_exe_unit_1'.
Finding identical cells in module `\watchdog'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

12.24.3. Executing OPT_RMDFF pass (remove dff with constant values).

12.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\adder\LEN=4..
Finding unused cells or wires in module $paramod\count_zeros\LEN=4..
Finding unused cells or wires in module $paramod\crc_coder\WCODE=4\WPOLY=5..
Finding unused cells or wires in module $paramod\crc_eval\WCODE=4\WPOLY=4..
Finding unused cells or wires in module $paramod\exe_unit\N=4\M=4..
Finding unused cells or wires in module $paramod\gray_koder2\LEN=4..
Finding unused cells or wires in module $paramod\onehot2nkb_encoder\LEN=4..
Finding unused cells or wires in module $paramod\shifter\N=20..
Finding unused cells or wires in module $paramod\sm_to_u2\LEN=4..
Finding unused cells or wires in module $paramod\watchdog\N=5..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \count_zeros..
Finding unused cells or wires in module \crc_coder..
Finding unused cells or wires in module \crc_eval..
Finding unused cells or wires in module \exe_unit..
Finding unused cells or wires in module \gray_koder2..
Finding unused cells or wires in module \onehot2nkb_encoder..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \sm_to_u2..
Finding unused cells or wires in module \spi_exe_unit_1..
Finding unused cells or wires in module \watchdog..
Removed 14 unused cells and 919 unused wires.
<suppressed ~37 debug messages>

12.24.5. Finished fast OPT passes.

12.25. Executing HIERARCHY pass (managing design hierarchy).

12.26. Printing statistics.

=== $paramod\adder\LEN=4 ===

   Number of wires:                 13
   Number of wire bits:             22
   Number of public wires:           4
   Number of public wire bits:      13
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 14
     $_ANDNOT_                       1
     $_AND_                          1
     $_AOI3_                         1
     $_NAND_                         2
     $_OAI3_                         1
     $_XNOR_                         3
     $_XOR_                          5

=== $paramod\count_zeros\LEN=4 ===

   Number of wires:                 56
   Number of wire bits:             99
   Number of public wires:           6
   Number of public wire bits:      49
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 54
     $_ANDNOT_                       6
     $_AND_                          1
     $_AOI3_                         1
     $_MUX_                         14
     $_NAND_                         1
     $_NOR_                          1
     $_NOT_                          2
     $_OAI3_                         1
     $_ORNOT_                        1
     $_OR_                           6
     $_XNOR_                        13
     $_XOR_                          7

=== $paramod\crc_coder\WCODE=4\WPOLY=5 ===

   Number of wires:                 30
   Number of wire bits:             84
   Number of public wires:           7
   Number of public wire bits:      61
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 27
     $_MUX_                          8
     $_NOT_                          5
     $_OAI3_                         2
     $_OR_                           2
     $_XNOR_                         4
     $_XOR_                          6

=== $paramod\crc_eval\WCODE=4\WPOLY=4 ===

   Number of wires:                 19
   Number of wire bits:             65
   Number of public wires:           7
   Number of public wire bits:      53
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 15
     $_MUX_                          5
     $_NOT_                          2
     $_OAI3_                         1
     $_OR_                           1
     $_XNOR_                         1
     $_XOR_                          5

=== $paramod\exe_unit\N=4\M=4 ===

   Number of wires:                154
   Number of wire bits:            247
   Number of public wires:          19
   Number of public wire bits:     112
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                150
     $_ANDNOT_                      12
     $_AND_                          1
     $_AOI3_                         1
     $_AOI4_                         8
     $_MUX_                         12
     $_NAND_                         8
     $_NOR_                         11
     $_NOT_                         16
     $_OAI4_                        12
     $_ORNOT_                       18
     $_OR_                          40
     $_XNOR_                         3
     $_XOR_                          1
     $paramod\adder\LEN=4            1
     $paramod\count_zeros\LEN=4      1
     $paramod\crc_coder\WCODE=4\WPOLY=5      1
     $paramod\crc_eval\WCODE=4\WPOLY=4      1
     $paramod\gray_koder2\LEN=4      1
     $paramod\onehot2nkb_encoder\LEN=4      1
     $paramod\sm_to_u2\LEN=4         1

=== $paramod\gray_koder2\LEN=4 ===

   Number of wires:                  4
   Number of wire bits:             10
   Number of public wires:           2
   Number of public wire bits:       8
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     $_OR_                           3
     $_XOR_                          2

=== $paramod\onehot2nkb_encoder\LEN=4 ===

   Number of wires:                  9
   Number of wire bits:             44
   Number of public wires:           3
   Number of public wire bits:      38
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  8
     $_ANDNOT_                       2
     $_AOI3_                         2
     $_OAI3_                         2
     $_OR_                           2

=== $paramod\shifter\N=20 ===

   Number of wires:                 30
   Number of wire bits:            106
   Number of public wires:          10
   Number of public wire bits:      86
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 60
     $_DFF_PN0_                     20
     $_MUX_                         40

=== $paramod\sm_to_u2\LEN=4 ===

   Number of wires:                  7
   Number of wire bits:             13
   Number of public wires:           2
   Number of public wire bits:       8
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  8
     $_ANDNOT_                       1
     $_AND_                          1
     $_MUX_                          2
     $_OR_                           2
     $_XOR_                          2

=== $paramod\watchdog\N=5 ===

   Number of wires:                 33
   Number of wire bits:             53
   Number of public wires:           9
   Number of public wire bits:      29
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 45
     $_ANDNOT_                       5
     $_AOI3_                         1
     $_DFF_PN0_                     10
     $_MUX_                         15
     $_NAND_                         1
     $_NOR_                          4
     $_NOT_                          2
     $_OR_                           3
     $_XNOR_                         1
     $_XOR_                          3

=== adder ===

   Number of wires:                 13
   Number of wire bits:             22
   Number of public wires:           4
   Number of public wire bits:      13
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 14
     $_ANDNOT_                       1
     $_AND_                          1
     $_AOI3_                         1
     $_NAND_                         2
     $_OAI3_                         1
     $_XNOR_                         3
     $_XOR_                          5

=== count_zeros ===

   Number of wires:                 56
   Number of wire bits:             99
   Number of public wires:           6
   Number of public wire bits:      49
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 54
     $_ANDNOT_                       6
     $_AND_                          1
     $_AOI3_                         1
     $_MUX_                         14
     $_NAND_                         1
     $_NOR_                          1
     $_NOT_                          2
     $_OAI3_                         1
     $_ORNOT_                        1
     $_OR_                           6
     $_XNOR_                        13
     $_XOR_                          7

=== crc_coder ===

   Number of wires:                 30
   Number of wire bits:             84
   Number of public wires:           7
   Number of public wire bits:      61
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 27
     $_MUX_                          8
     $_NOT_                          5
     $_OAI3_                         2
     $_OR_                           2
     $_XNOR_                         4
     $_XOR_                          6

=== crc_eval ===

   Number of wires:                 19
   Number of wire bits:             65
   Number of public wires:           7
   Number of public wire bits:      53
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 15
     $_MUX_                          5
     $_NOT_                          2
     $_OAI3_                         1
     $_OR_                           1
     $_XNOR_                         1
     $_XOR_                          5

=== exe_unit ===

   Number of wires:                154
   Number of wire bits:            247
   Number of public wires:          19
   Number of public wire bits:     112
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                150
     $_ANDNOT_                      12
     $_AND_                          1
     $_AOI3_                         1
     $_AOI4_                         8
     $_MUX_                         12
     $_NAND_                         8
     $_NOR_                         11
     $_NOT_                         16
     $_OAI4_                        12
     $_ORNOT_                       18
     $_OR_                          40
     $_XNOR_                         3
     $_XOR_                          1
     $paramod\adder\LEN=4            1
     $paramod\count_zeros\LEN=4      1
     $paramod\crc_coder\WCODE=4\WPOLY=5      1
     $paramod\crc_eval\WCODE=4\WPOLY=4      1
     $paramod\gray_koder2\LEN=4      1
     $paramod\onehot2nkb_encoder\LEN=4      1
     $paramod\sm_to_u2\LEN=4         1

=== gray_koder2 ===

   Number of wires:                  4
   Number of wire bits:             10
   Number of public wires:           2
   Number of public wire bits:       8
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     $_OR_                           3
     $_XOR_                          2

=== onehot2nkb_encoder ===

   Number of wires:                  9
   Number of wire bits:             44
   Number of public wires:           3
   Number of public wire bits:      38
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  8
     $_ANDNOT_                       2
     $_AOI3_                         2
     $_OAI3_                         2
     $_OR_                           2

=== shifter ===

   Number of wires:                 30
   Number of wire bits:            106
   Number of public wires:          10
   Number of public wire bits:      86
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 60
     $_DFF_PN0_                     20
     $_MUX_                         40

=== sm_to_u2 ===

   Number of wires:                  7
   Number of wire bits:             13
   Number of public wires:           2
   Number of public wire bits:       8
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  8
     $_ANDNOT_                       1
     $_AND_                          1
     $_MUX_                          2
     $_OR_                           2
     $_XOR_                          2

=== spi_exe_unit_1 ===

   Number of wires:                 88
   Number of wire bits:            170
   Number of public wires:          27
   Number of public wire bits:     109
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                137
     $_ANDNOT_                      30
     $_AND_                          2
     $_AOI3_                         3
     $_AOI4_                         3
     $_DFF_NN0_                     21
     $_DFF_NN1_                      4
     $_MUX_                         20
     $_NAND_                         2
     $_NOR_                          4
     $_NOT_                         23
     $_OAI3_                         4
     $_OAI4_                        10
     $_ORNOT_                        4
     $_OR_                           4
     $paramod\exe_unit\N=4\M=4       1
     $paramod\shifter\N=20           1
     $paramod\watchdog\N=5           1

=== watchdog ===

   Number of wires:                 80
   Number of wire bits:            129
   Number of public wires:           9
   Number of public wire bits:      58
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                114
     $_ANDNOT_                      11
     $_AOI3_                         2
     $_DFF_PN0_                     24
     $_MUX_                         36
     $_NAND_                         1
     $_NOR_                         10
     $_NOT_                          4
     $_OAI3_                         3
     $_ORNOT_                        1
     $_OR_                          11
     $_XNOR_                         1
     $_XOR_                         10

12.27. Executing CHECK pass (checking for obvious problems).
checking module $paramod\adder\LEN=4..
checking module $paramod\count_zeros\LEN=4..
checking module $paramod\crc_coder\WCODE=4\WPOLY=5..
checking module $paramod\crc_eval\WCODE=4\WPOLY=4..
checking module $paramod\exe_unit\N=4\M=4..
checking module $paramod\gray_koder2\LEN=4..
checking module $paramod\onehot2nkb_encoder\LEN=4..
checking module $paramod\shifter\N=20..
checking module $paramod\sm_to_u2\LEN=4..
checking module $paramod\watchdog\N=5..
checking module adder..
checking module count_zeros..
checking module crc_coder..
checking module crc_eval..
checking module exe_unit..
checking module gray_koder2..
checking module onehot2nkb_encoder..
checking module shifter..
checking module sm_to_u2..
checking module spi_exe_unit_1..
checking module watchdog..
found and reported 0 problems.

13. Executing ABC pass (technology mapping using ABC).

13.1. Extracting gate netlist of module `$paramod\adder\LEN=4' to `<abc-temp-dir>/input.blif'..
Extracted 14 gates and 22 wires to a netlist network with 8 inputs and 5 outputs.

13.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:               XOR cells:        7
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        5
Removing temp directory.

13.2. Extracting gate netlist of module `$paramod\count_zeros\LEN=4' to `<abc-temp-dir>/input.blif'..
Extracted 54 gates and 62 wires to a netlist network with 8 inputs and 4 outputs.

13.2.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       12
ABC RESULTS:               NOT cells:        8
ABC RESULTS:                OR cells:       10
ABC RESULTS:               XOR cells:        9
ABC RESULTS:        internal signals:       50
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

13.3. Extracting gate netlist of module `$paramod\crc_coder\WCODE=4\WPOLY=5' to `<abc-temp-dir>/input.blif'..
Extracted 27 gates and 39 wires to a netlist network with 12 inputs and 4 outputs.

13.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       10
ABC RESULTS:               XOR cells:       10
ABC RESULTS:        internal signals:       23
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        4
Removing temp directory.

13.4. Extracting gate netlist of module `$paramod\crc_eval\WCODE=4\WPOLY=4' to `<abc-temp-dir>/input.blif'..
Extracted 15 gates and 24 wires to a netlist network with 9 inputs and 3 outputs.

13.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:               XOR cells:        6
ABC RESULTS:        internal signals:       12
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        3
Removing temp directory.

13.5. Extracting gate netlist of module `$paramod\exe_unit\N=4\M=4' to `<abc-temp-dir>/input.blif'..
Extracted 143 gates and 183 wires to a netlist network with 40 inputs and 8 outputs.

13.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       88
ABC RESULTS:               NOT cells:       36
ABC RESULTS:                OR cells:       86
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:      135
ABC RESULTS:           input signals:       40
ABC RESULTS:          output signals:        8
Removing temp directory.

13.6. Extracting gate netlist of module `$paramod\gray_koder2\LEN=4' to `<abc-temp-dir>/input.blif'..
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 3 outputs.

13.6.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.6.2. Re-integrating ABC results.
ABC RESULTS:                OR cells:        3
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        3
Removing temp directory.

13.7. Extracting gate netlist of module `$paramod\onehot2nkb_encoder\LEN=4' to `<abc-temp-dir>/input.blif'..
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 2 outputs.

13.7.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.7.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        2
Removing temp directory.

13.8. Extracting gate netlist of module `$paramod\shifter\N=20' to `<abc-temp-dir>/input.blif'..
Extracted 40 gates and 83 wires to a netlist network with 43 inputs and 20 outputs.

13.8.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.8.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       60
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:       60
ABC RESULTS:        internal signals:       20
ABC RESULTS:           input signals:       43
ABC RESULTS:          output signals:       20
Removing temp directory.

13.9. Extracting gate netlist of module `$paramod\sm_to_u2\LEN=4' to `<abc-temp-dir>/input.blif'..
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 3 outputs.

13.9.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.9.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        3
Removing temp directory.

13.10. Extracting gate netlist of module `$paramod\watchdog\N=5' to `<abc-temp-dir>/input.blif'..
Extracted 35 gates and 51 wires to a netlist network with 16 inputs and 11 outputs.

13.10.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.10.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       25
ABC RESULTS:               NOT cells:        5
ABC RESULTS:                OR cells:       25
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:       24
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       11
Removing temp directory.

13.11. Extracting gate netlist of module `\adder' to `<abc-temp-dir>/input.blif'..
Extracted 14 gates and 22 wires to a netlist network with 8 inputs and 5 outputs.

13.11.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.11.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:               XOR cells:        7
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        5
Removing temp directory.

13.12. Extracting gate netlist of module `\count_zeros' to `<abc-temp-dir>/input.blif'..
Extracted 54 gates and 62 wires to a netlist network with 8 inputs and 4 outputs.

13.12.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.12.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       12
ABC RESULTS:               NOT cells:        8
ABC RESULTS:                OR cells:       10
ABC RESULTS:               XOR cells:        9
ABC RESULTS:        internal signals:       50
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:        4
Removing temp directory.

13.13. Extracting gate netlist of module `\crc_coder' to `<abc-temp-dir>/input.blif'..
Extracted 27 gates and 39 wires to a netlist network with 12 inputs and 4 outputs.

13.13.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.13.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       10
ABC RESULTS:               XOR cells:       10
ABC RESULTS:        internal signals:       23
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        4
Removing temp directory.

13.14. Extracting gate netlist of module `\crc_eval' to `<abc-temp-dir>/input.blif'..
Extracted 15 gates and 24 wires to a netlist network with 9 inputs and 3 outputs.

13.14.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.14.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:               XOR cells:        6
ABC RESULTS:        internal signals:       12
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        3
Removing temp directory.

13.15. Extracting gate netlist of module `\exe_unit' to `<abc-temp-dir>/input.blif'..
Extracted 143 gates and 183 wires to a netlist network with 40 inputs and 8 outputs.

13.15.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.15.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       89
ABC RESULTS:               NOT cells:       35
ABC RESULTS:                OR cells:       84
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:      135
ABC RESULTS:           input signals:       40
ABC RESULTS:          output signals:        8
Removing temp directory.

13.16. Extracting gate netlist of module `\gray_koder2' to `<abc-temp-dir>/input.blif'..
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 3 outputs.

13.16.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.16.2. Re-integrating ABC results.
ABC RESULTS:                OR cells:        3
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        3
Removing temp directory.

13.17. Extracting gate netlist of module `\onehot2nkb_encoder' to `<abc-temp-dir>/input.blif'..
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 2 outputs.

13.17.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.17.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        4
ABC RESULTS:               XOR cells:        2
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        2
Removing temp directory.

13.18. Extracting gate netlist of module `\shifter' to `<abc-temp-dir>/input.blif'..
Extracted 40 gates and 83 wires to a netlist network with 43 inputs and 20 outputs.

13.18.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.18.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       60
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:       60
ABC RESULTS:        internal signals:       20
ABC RESULTS:           input signals:       43
ABC RESULTS:          output signals:       20
Removing temp directory.

13.19. Extracting gate netlist of module `\sm_to_u2' to `<abc-temp-dir>/input.blif'..
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 3 outputs.

13.19.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.19.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        3
Removing temp directory.

13.20. Extracting gate netlist of module `\spi_exe_unit_1' to `<abc-temp-dir>/input.blif'..
Extracted 109 gates and 166 wires to a netlist network with 57 inputs and 48 outputs.

13.20.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.20.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       80
ABC RESULTS:               NOT cells:        7
ABC RESULTS:                OR cells:       38
ABC RESULTS:              ZERO cells:        2
ABC RESULTS:        internal signals:       61
ABC RESULTS:           input signals:       57
ABC RESULTS:          output signals:       48
Removing temp directory.

13.21. Extracting gate netlist of module `\watchdog' to `<abc-temp-dir>/input.blif'..
Extracted 90 gates and 127 wires to a netlist network with 37 inputs and 25 outputs.

13.21.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 7 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

13.21.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       46
ABC RESULTS:               NOT cells:       12
ABC RESULTS:                OR cells:       60
ABC RESULTS:               XOR cells:        8
ABC RESULTS:        internal signals:       65
ABC RESULTS:           input signals:       37
ABC RESULTS:          output signals:       25
Removing temp directory.

14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\adder\LEN=4..
Finding unused cells or wires in module $paramod\count_zeros\LEN=4..
Finding unused cells or wires in module $paramod\crc_coder\WCODE=4\WPOLY=5..
Finding unused cells or wires in module $paramod\crc_eval\WCODE=4\WPOLY=4..
Finding unused cells or wires in module $paramod\exe_unit\N=4\M=4..
Finding unused cells or wires in module $paramod\gray_koder2\LEN=4..
Finding unused cells or wires in module $paramod\onehot2nkb_encoder\LEN=4..
Finding unused cells or wires in module $paramod\shifter\N=20..
Finding unused cells or wires in module $paramod\sm_to_u2\LEN=4..
Finding unused cells or wires in module $paramod\watchdog\N=5..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \count_zeros..
Finding unused cells or wires in module \crc_coder..
Finding unused cells or wires in module \crc_eval..
Finding unused cells or wires in module \exe_unit..
Finding unused cells or wires in module \gray_koder2..
Finding unused cells or wires in module \onehot2nkb_encoder..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \sm_to_u2..
Finding unused cells or wires in module \spi_exe_unit_1..
Finding unused cells or wires in module \watchdog..
Removed 0 unused cells and 1236 unused wires.
<suppressed ~21 debug messages>

15. Executing FLATTEN pass (flatten design).
Using template $paramod\count_zeros\LEN=4 for cells of type $paramod\count_zeros\LEN=4.
Using template $paramod\onehot2nkb_encoder\LEN=4 for cells of type $paramod\onehot2nkb_encoder\LEN=4.
Using template $paramod\gray_koder2\LEN=4 for cells of type $paramod\gray_koder2\LEN=4.
Using template $paramod\crc_coder\WCODE=4\WPOLY=5 for cells of type $paramod\crc_coder\WCODE=4\WPOLY=5.
Using template $paramod\crc_eval\WCODE=4\WPOLY=4 for cells of type $paramod\crc_eval\WCODE=4\WPOLY=4.
Using template $paramod\sm_to_u2\LEN=4 for cells of type $paramod\sm_to_u2\LEN=4.
Using template $paramod\adder\LEN=4 for cells of type $paramod\adder\LEN=4.
Using template $paramod\shifter\N=20 for cells of type $paramod\shifter\N=20.
Using template $paramod\watchdog\N=5 for cells of type $paramod\watchdog\N=5.
Using template $paramod\exe_unit\N=4\M=4 for cells of type $paramod\exe_unit\N=4\M=4.
<suppressed ~17 debug messages>
No more expansions possible.

16. Executing Verilog backend.
Dumping module `\spi_exe_unit_1_rtl'.

Warnings: 8 unique messages, 12 total
End of script. Logfile hash: 1eb69a208f
CPU: user 1.26s system 0.03s, MEM: 31.24 MB total, 25.19 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 19% 21x opt_expr (0 sec), 19% 22x opt_clean (0 sec), ...
